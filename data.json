{
  "tree": [
    {
      "name": "mipac.util",
      "classes": [
        {
          "name": "AuthClient",
          "attributes": [],
          "methods": [
            {
              "name": "check_auth",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "get_auth_url",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "wait_miauth",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "wait_oldauth",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "None"
            }
          ]
        },
        {
          "name": "MiTime",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": [
        {
          "name": "bool_to_string",
          "is_async": false,
          "args": [
            {
              "name": "boolean",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "cache",
          "is_async": false,
          "args": [
            {
              "name": "group",
              "type": "str"
            },
            {
              "name": "override",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "check_multi_arg",
          "is_async": false,
          "args": [
            {
              "name": "args",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "convert_dict_keys_to_camel",
          "is_async": false,
          "args": [
            {
              "name": "data",
              "type": "Mapping[Any, Any]"
            },
            {
              "name": "replace_list",
              "type": "dict[str, str] | None"
            }
          ],
          "kwargs": [],
          "return_type": "Mapping[Any, Any]"
        },
        {
          "name": "deprecated",
          "is_async": false,
          "args": [
            {
              "name": "func",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "get_cache_key",
          "is_async": false,
          "args": [
            {
              "name": "func",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "key_builder",
          "is_async": false,
          "args": [
            {
              "name": "func",
              "type": "Any"
            },
            {
              "name": "cls",
              "type": "Any"
            },
            {
              "name": "args",
              "type": "Any"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "remove_dict_empty",
          "is_async": false,
          "args": [
            {
              "name": "data",
              "type": "dict[str, Any]"
            }
          ],
          "kwargs": [],
          "return_type": "dict[str, Any]"
        },
        {
          "name": "remove_list_empty",
          "is_async": false,
          "args": [
            {
              "name": "data",
              "type": "list[Any]"
            }
          ],
          "kwargs": [],
          "return_type": "list[Any]"
        },
        {
          "name": "set_cache",
          "is_async": false,
          "args": [
            {
              "name": "group",
              "type": "str"
            },
            {
              "name": "key",
              "type": "str"
            },
            {
              "name": "value",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "snake_to_camel",
          "is_async": false,
          "args": [
            {
              "name": "snake_str",
              "type": "str"
            },
            {
              "name": "replace_list",
              "type": "dict[str, str]"
            }
          ],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "str_lower",
          "is_async": false,
          "args": [
            {
              "name": "text",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "str_to_datetime",
          "is_async": false,
          "args": [
            {
              "name": "data",
              "type": "str"
            },
            {
              "name": "format",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "datetime"
        },
        {
          "name": "upper_to_lower",
          "is_async": false,
          "args": [
            {
              "name": "data",
              "type": "dict[str, Any]"
            },
            {
              "name": "field",
              "type": "Optional[dict[str, Any]]"
            },
            {
              "name": "nest",
              "type": "bool"
            },
            {
              "name": "replace_list",
              "type": "Optional[dict[str, Any]]"
            }
          ],
          "kwargs": [],
          "return_type": "dict[str, Any]"
        }
      ]
    },
    {
      "name": "mipac.http",
      "classes": [
        {
          "name": "HTTPClient",
          "attributes": [
            {
              "name": "session",
              "type": "aiohttp.ClientSession",
              "is_property": true
            }
          ],
          "methods": [
            {
              "name": "close_session",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "None"
            },
            {
              "name": "login",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "IUserDetailed"
            },
            {
              "name": "request",
              "is_async": true,
              "args": [
                {
                  "name": "route",
                  "type": "Route"
                },
                {
                  "name": "auth",
                  "type": "bool"
                },
                {
                  "name": "remove_none",
                  "type": "bool"
                },
                {
                  "name": "kwargs",
                  "type": "Any"
                }
              ],
              "kwargs": [],
              "return_type": "R"
            }
          ]
        },
        {
          "name": "MisskeyClientWebSocketResponse",
          "attributes": [
            {
              "name": "client_notakeover",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "close_code",
              "type": "typing.Optional[int]",
              "is_property": true
            },
            {
              "name": "closed",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "compress",
              "type": "int",
              "is_property": true
            },
            {
              "name": "protocol",
              "type": "typing.Optional[str]",
              "is_property": true
            }
          ],
          "methods": [
            {
              "name": "close",
              "is_async": true,
              "args": [],
              "kwargs": [
                {
                  "name": "code",
                  "type": "int"
                },
                {
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "return_type": "bool"
            },
            {
              "name": "exception",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "typing.Optional[BaseException]"
            },
            {
              "name": "get_extra_info",
              "is_async": false,
              "args": [
                {
                  "name": "name",
                  "type": "str"
                },
                {
                  "name": "default",
                  "type": "typing.Any"
                }
              ],
              "kwargs": [],
              "return_type": "typing.Any"
            },
            {
              "name": "ping",
              "is_async": true,
              "args": [
                {
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "kwargs": [],
              "return_type": "None"
            },
            {
              "name": "pong",
              "is_async": true,
              "args": [
                {
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "kwargs": [],
              "return_type": "None"
            },
            {
              "name": "receive",
              "is_async": true,
              "args": [
                {
                  "name": "timeout",
                  "type": "typing.Optional[float]"
                }
              ],
              "kwargs": [],
              "return_type": "aiohttp.http_websocket.WSMessage"
            },
            {
              "name": "receive_bytes",
              "is_async": true,
              "args": [],
              "kwargs": [
                {
                  "name": "timeout",
                  "type": "typing.Optional[float]"
                }
              ],
              "return_type": "bytes"
            },
            {
              "name": "receive_json",
              "is_async": true,
              "args": [],
              "kwargs": [
                {
                  "name": "loads",
                  "type": "typing.Callable[[str], typing.Any]"
                },
                {
                  "name": "timeout",
                  "type": "typing.Optional[float]"
                }
              ],
              "return_type": "typing.Any"
            },
            {
              "name": "receive_str",
              "is_async": true,
              "args": [],
              "kwargs": [
                {
                  "name": "timeout",
                  "type": "typing.Optional[float]"
                }
              ],
              "return_type": "str"
            },
            {
              "name": "send_bytes",
              "is_async": true,
              "args": [
                {
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "name": "compress",
                  "type": "typing.Optional[int]"
                }
              ],
              "kwargs": [],
              "return_type": "None"
            },
            {
              "name": "send_json",
              "is_async": true,
              "args": [
                {
                  "name": "data",
                  "type": "typing.Any"
                },
                {
                  "name": "compress",
                  "type": "typing.Optional[int]"
                }
              ],
              "kwargs": [
                {
                  "name": "dumps",
                  "type": "typing.Callable[[typing.Any], str]"
                }
              ],
              "return_type": "None"
            },
            {
              "name": "send_str",
              "is_async": true,
              "args": [
                {
                  "name": "data",
                  "type": "str"
                },
                {
                  "name": "compress",
                  "type": "typing.Optional[int]"
                }
              ],
              "kwargs": [],
              "return_type": "None"
            }
          ]
        },
        {
          "name": "Route",
          "attributes": [],
          "methods": []
        },
        {
          "name": "_MissingSentinel",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": [
        {
          "name": "json_or_text",
          "is_async": true,
          "args": [
            {
              "name": "response",
              "type": "aiohttp.ClientResponse"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "mipac.client",
      "classes": [
        {
          "name": "Client",
          "attributes": [
            {
              "name": "api",
              "type": "mipac.manager.client.ClientManager",
              "is_property": true
            }
          ],
          "methods": [
            {
              "name": "close_session",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "None"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.file",
      "classes": [
        {
          "name": "MiFile",
          "attributes": [
            {
              "name": "comment",
              "type": "<member 'comment' of 'MiFile' objects>",
              "is_property": false
            },
            {
              "name": "file_id",
              "type": "<member 'file_id' of 'MiFile' objects>",
              "is_property": false
            },
            {
              "name": "folder_id",
              "type": "<member 'folder_id' of 'MiFile' objects>",
              "is_property": false
            },
            {
              "name": "force",
              "type": "<member 'force' of 'MiFile' objects>",
              "is_property": false
            },
            {
              "name": "is_sensitive",
              "type": "<member 'is_sensitive' of 'MiFile' objects>",
              "is_property": false
            },
            {
              "name": "name",
              "type": "<member 'name' of 'MiFile' objects>",
              "is_property": false
            },
            {
              "name": "path",
              "type": "<member 'path' of 'MiFile' objects>",
              "is_property": false
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.config",
      "classes": [
        {
          "name": "CacheConfig",
          "attributes": [],
          "methods": []
        },
        {
          "name": "CacheConfigData",
          "attributes": [
            {
              "name": "maxsize",
              "type": "1024",
              "is_property": false
            },
            {
              "name": "ttl",
              "type": "360",
              "is_property": false
            }
          ],
          "methods": []
        },
        {
          "name": "Config",
          "attributes": [],
          "methods": [
            {
              "name": "from_dict",
              "is_async": false,
              "args": [
                {
                  "name": "host",
                  "type": "str | None"
                },
                {
                  "name": "is_ssl",
                  "type": "bool | None"
                },
                {
                  "name": "is_ayuskey",
                  "type": "bool | None"
                },
                {
                  "name": "use_version",
                  "type": "typing.Optional[typing.Literal[13, 12, 11]]"
                },
                {
                  "name": "cache",
                  "type": "mipac.config.CacheConfigData | None"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.abstract.manager",
      "classes": [
        {
          "name": "AbstractManager",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.abstract.action",
      "classes": [
        {
          "name": "AbstractAction",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.abstract.model",
      "classes": [
        {
          "name": "AbstractModel",
          "attributes": [
            {
              "name": "action",
              "type": "inspect._empty",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.poll",
      "classes": [
        {
          "name": "PollManager",
          "attributes": [
            {
              "name": "action",
              "type": "PollActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.mute",
      "classes": [
        {
          "name": "MuteManager",
          "attributes": [
            {
              "name": "action",
              "type": "MuteActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.reaction",
      "classes": [
        {
          "name": "ReactionManager",
          "attributes": [
            {
              "name": "action",
              "type": "ReactionActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.chat",
      "classes": [
        {
          "name": "ChatManager",
          "attributes": [
            {
              "name": "action",
              "type": "ChatAction",
              "is_property": true
            }
          ],
          "methods": [
            {
              "name": "custom_action",
              "is_async": false,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                },
                {
                  "name": "message_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "ChatAction"
            },
            {
              "name": "custom_base_chat_action",
              "is_async": false,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                },
                {
                  "name": "message_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "BaseChatAction"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.follow",
      "classes": [
        {
          "name": "FollowManager",
          "attributes": [
            {
              "name": "action",
              "type": "FollowActions",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "FollowRequestManager",
          "attributes": [
            {
              "name": "action",
              "type": "FollowRequestActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.favorite",
      "classes": [
        {
          "name": "FavoriteManager",
          "attributes": [
            {
              "name": "action",
              "type": "FavoriteActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.user",
      "classes": [
        {
          "name": "UserManager",
          "attributes": [
            {
              "name": "action",
              "type": "UserActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.note",
      "classes": [
        {
          "name": "ClientNoteManager",
          "attributes": [
            {
              "name": "action",
              "type": "ClientNoteActions",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NoteManager",
          "attributes": [
            {
              "name": "action",
              "type": "NoteActions",
              "is_property": true
            }
          ],
          "methods": [
            {
              "name": "create_client_note_manager",
              "is_async": false,
              "args": [
                {
                  "name": "note_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "ClientNoteManager"
            },
            {
              "name": "get",
              "is_async": true,
              "args": [
                {
                  "name": "local",
                  "type": "bool"
                },
                {
                  "name": "reply",
                  "type": "bool"
                },
                {
                  "name": "renote",
                  "type": "bool"
                },
                {
                  "name": "with_files",
                  "type": "bool"
                },
                {
                  "name": "poll",
                  "type": "bool"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.drive",
      "classes": [
        {
          "name": "DriveManager",
          "attributes": [
            {
              "name": "action",
              "type": "DriveActions",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "FileManager",
          "attributes": [
            {
              "name": "action",
              "type": "FileActions",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "FolderManager",
          "attributes": [
            {
              "name": "action",
              "type": "FolderActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.client",
      "classes": [
        {
          "name": "ClientManager",
          "attributes": [
            {
              "name": "action",
              "type": "ClientActions",
              "is_property": true
            }
          ],
          "methods": [
            {
              "name": "get_me",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "UserDetailed"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.chart",
      "classes": [
        {
          "name": "ChartManager",
          "attributes": [
            {
              "name": "action",
              "type": "ChartActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.page",
      "classes": [
        {
          "name": "PagesManager",
          "attributes": [],
          "methods": [
            {
              "name": "get_pages",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "int | None"
                },
                {
                  "name": "until_id",
                  "type": "int | None"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.federation",
      "classes": [
        {
          "name": "FederationManager",
          "attributes": [
            {
              "name": "action",
              "type": "FederationActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.my",
      "classes": [
        {
          "name": "MyManager",
          "attributes": [
            {
              "name": "action",
              "type": "inspect._empty",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.ad",
      "classes": [
        {
          "name": "AdminAdvertisingManager",
          "attributes": [],
          "methods": [
            {
              "name": "create",
              "is_async": true,
              "args": [
                {
                  "name": "url",
                  "type": "str"
                },
                {
                  "name": "memo",
                  "type": "str"
                },
                {
                  "name": "place",
                  "type": "str"
                },
                {
                  "name": "priority",
                  "type": "str"
                },
                {
                  "name": "ratio",
                  "type": "str"
                },
                {
                  "name": "expires_at",
                  "type": "int"
                },
                {
                  "name": "image_url",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.admins.moderator",
      "classes": [
        {
          "name": "AdminModeratorManager",
          "attributes": [
            {
              "name": "action",
              "type": "AdminModeratorActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.admins.user",
      "classes": [
        {
          "name": "AdminUserManager",
          "attributes": [
            {
              "name": "action",
              "type": "AdminUserActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.admins.admin",
      "classes": [
        {
          "name": "AdminManager",
          "attributes": [
            {
              "name": "action",
              "type": "AdminActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.admins.announcement",
      "classes": [
        {
          "name": "AdminAnnouncementManager",
          "attributes": [
            {
              "name": "action",
              "type": "AdminAnnouncementActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.manager.admins.emoji",
      "classes": [
        {
          "name": "AdminEmojiManager",
          "attributes": [
            {
              "name": "action",
              "type": "AdminEmojiActions",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.poll",
      "classes": [
        {
          "name": "MiPoll",
          "attributes": [],
          "methods": []
        },
        {
          "name": "Poll",
          "attributes": [
            {
              "name": "choices",
              "type": "list[PollChoice]",
              "is_property": true
            },
            {
              "name": "expired_after",
              "type": "int",
              "is_property": true
            },
            {
              "name": "expires_at",
              "type": "int",
              "is_property": true
            },
            {
              "name": "multiple",
              "type": "bool",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "PollChoice",
          "attributes": [
            {
              "name": "is_voted",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "text",
              "type": "str",
              "is_property": true
            },
            {
              "name": "votes",
              "type": "int",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.mute",
      "classes": [
        {
          "name": "MuteUser",
          "attributes": [
            {
              "name": "created_at",
              "type": "str",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "mutee",
              "type": "UserDetailed",
              "is_property": true
            },
            {
              "name": "mutee_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.reaction",
      "classes": [
        {
          "name": "PartialReaction",
          "attributes": [
            {
              "name": "emoji",
              "type": "PartialCustomEmoji",
              "is_property": true
            },
            {
              "name": "reaction",
              "type": "str",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.chat",
      "classes": [
        {
          "name": "ChatGroup",
          "attributes": [
            {
              "name": "created_at",
              "type": "str",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "owner_id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "user_ids",
              "type": "list[str]",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "ChatMessage",
          "attributes": [
            {
              "name": "api",
              "type": "BaseChatAction",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "str",
              "is_property": true
            },
            {
              "name": "file",
              "type": "File | None",
              "is_property": true
            },
            {
              "name": "file_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "group",
              "type": "ChatGroup | None",
              "is_property": true
            },
            {
              "name": "group_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "reads",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "recipient",
              "type": "LiteUser | None",
              "is_property": true
            },
            {
              "name": "recipient_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "text",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "user",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.follow",
      "classes": [
        {
          "name": "FollowRequest",
          "attributes": [
            {
              "name": "api",
              "type": "FollowRequestManager",
              "is_property": true
            },
            {
              "name": "followee",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "follower",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.channel",
      "classes": [
        {
          "name": "Channel",
          "attributes": [
            {
              "name": "banner_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "str",
              "is_property": true
            },
            {
              "name": "description",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "has_unread_note",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_following",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "last_noted_at",
              "type": "str",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "notes_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "users_count",
              "type": "int",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.user",
      "classes": [
        {
          "name": "Achievement",
          "attributes": [
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "unlocked_at",
              "type": "int",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "FollowRequest",
          "attributes": [
            {
              "name": "followee",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "follower",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "UserDetailed",
          "attributes": [
            {
              "name": "achievements",
              "type": "list[Achievement]",
              "is_property": true
            },
            {
              "name": "api",
              "type": "UserManager",
              "is_property": true
            },
            {
              "name": "avatar_blurhash",
              "type": "str",
              "is_property": true
            },
            {
              "name": "avatar_color",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "avatar_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "banner_blurhash",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "banner_color",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "banner_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "birthday",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "description",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "emojis",
              "type": "list[ICustomEmojiLite]",
              "is_property": true
            },
            {
              "name": "ff_visibility",
              "type": "Literal['public', 'followers', 'private'] | None",
              "is_property": true
            },
            {
              "name": "fields",
              "type": "list[IUserDetailedField]",
              "is_property": true
            },
            {
              "name": "followers_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "following_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "has_pending_follow_request_from_you",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "has_pending_follow_request_to_you",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "host",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "instance",
              "type": "LiteInstance | None",
              "is_property": true
            },
            {
              "name": "is_admin",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_blocked",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "is_blocking",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "is_bot",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_cat",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_followed",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "is_following",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "is_locked",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_moderator",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_muted",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "is_silenced",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_suspended",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "lang",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "last_fetched_at",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "location",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "logged_in_days",
              "type": "int | None",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "nickname",
              "type": "str",
              "is_property": true
            },
            {
              "name": "notes_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "online_status",
              "type": "Literal['online', 'active', 'offline', 'unknown']",
              "is_property": true
            },
            {
              "name": "pinned_note_ids",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "pinned_notes",
              "type": "list[Note]",
              "is_property": true
            },
            {
              "name": "pinned_page",
              "type": "IPage | None",
              "is_property": true
            },
            {
              "name": "pinned_page_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "public_reactions",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "security_keys",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "two_factor_enabled",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "updated_at",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "uri",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "use_password_less_login",
              "type": "bool | None",
              "is_property": true
            },
            {
              "name": "username",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.admin",
      "classes": [
        {
          "name": "IndexStat",
          "attributes": [
            {
              "name": "indexdef",
              "type": "str",
              "is_property": true
            },
            {
              "name": "indexname",
              "type": "str",
              "is_property": true
            },
            {
              "name": "schemaname",
              "type": "str",
              "is_property": true
            },
            {
              "name": "tablename",
              "type": "str",
              "is_property": true
            },
            {
              "name": "tablespace",
              "type": "str | None",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "ModerationLog",
          "attributes": [
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "info",
              "type": "dict",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            },
            {
              "name": "user",
              "type": "UserDetailed",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "ServerInfo",
          "attributes": [
            {
              "name": "cpu",
              "type": "ServerInfoCpu",
              "is_property": true
            },
            {
              "name": "fs",
              "type": "ServerInfoFs",
              "is_property": true
            },
            {
              "name": "machine",
              "type": "str",
              "is_property": true
            },
            {
              "name": "mem",
              "type": "ServerInfoMem",
              "is_property": true
            },
            {
              "name": "net",
              "type": "ServerInfoNet",
              "is_property": true
            },
            {
              "name": "node",
              "type": "str",
              "is_property": true
            },
            {
              "name": "os",
              "type": "str",
              "is_property": true
            },
            {
              "name": "psql",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "ServerInfoCpu",
          "attributes": [
            {
              "name": "cores",
              "type": "int",
              "is_property": true
            },
            {
              "name": "models",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "ServerInfoFs",
          "attributes": [
            {
              "name": "total",
              "type": "int",
              "is_property": true
            },
            {
              "name": "used",
              "type": "int",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "ServerInfoMem",
          "attributes": [
            {
              "name": "total",
              "type": "int",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "ServerInfoNet",
          "attributes": [
            {
              "name": "interface",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "UserIP",
          "attributes": [
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "ip",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.note",
      "classes": [
        {
          "name": "Follow",
          "attributes": [],
          "methods": [
            {
              "name": "follow",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "tuple[bool, str | None]"
            },
            {
              "name": "unfollow",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        },
        {
          "name": "Header",
          "attributes": [],
          "methods": []
        },
        {
          "name": "Note",
          "attributes": [
            {
              "name": "api",
              "type": "ClientNoteManager",
              "is_property": true
            },
            {
              "name": "author",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "content",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "cw",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "emojis",
              "type": "list[ICustomEmojiLite]",
              "is_property": true
            },
            {
              "name": "file_ids",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "files",
              "type": "list[IDriveFile]",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_hidden",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "local_only",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "my_reaction",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "poll",
              "type": "Poll | None",
              "is_property": true
            },
            {
              "name": "reactions",
              "type": "dict[str, int]",
              "is_property": true
            },
            {
              "name": "renote",
              "type": "'Note' | None",
              "is_property": true
            },
            {
              "name": "renote_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "renote_id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "replies_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "reply",
              "type": "'Note' | None",
              "is_property": true
            },
            {
              "name": "reply_id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "uri",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "visibility",
              "type": "Literal['public', 'home', 'followers', 'specified']",
              "is_property": true
            },
            {
              "name": "visible_user_ids",
              "type": "list[str]",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NoteDeleted",
          "attributes": [
            {
              "name": "deleted_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "note_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NoteReaction",
          "attributes": [
            {
              "name": "created_at",
              "type": "datetime | None",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "user",
              "type": "LiteUser",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NoteState",
          "attributes": [
            {
              "name": "is_favorite",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_muted_thread",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_watching",
              "type": "bool",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NoteTranslateResult",
          "attributes": [
            {
              "name": "source_language",
              "type": "str",
              "is_property": true
            },
            {
              "name": "text",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.drive",
      "classes": [
        {
          "name": "File",
          "attributes": [
            {
              "name": "blurhash",
              "type": "str",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "inspect._empty",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_sensitive",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "md5",
              "type": "str",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "properties",
              "type": "FileProperties",
              "is_property": true
            },
            {
              "name": "size",
              "type": "int",
              "is_property": true
            },
            {
              "name": "thumbnail_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            },
            {
              "name": "url",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "FileProperties",
          "attributes": [
            {
              "name": "avg_color",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "height",
              "type": "int",
              "is_property": true
            },
            {
              "name": "width",
              "type": "int | None",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "Folder",
          "attributes": [
            {
              "name": "created_at",
              "type": "str",
              "is_property": true
            },
            {
              "name": "files_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "folders_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "parent",
              "type": "dict[str, Any]",
              "is_property": true
            },
            {
              "name": "parent_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.instance",
      "classes": [
        {
          "name": "FederationInstance",
          "attributes": [
            {
              "name": "caught_at",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "description",
              "type": "str",
              "is_property": true
            },
            {
              "name": "favicon_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "first_retrieved_at",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "followers_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "following_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "host",
              "type": "str",
              "is_property": true
            },
            {
              "name": "icon_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "info_updated_at",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_blocked",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_not_responding",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "is_suspended",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "last_communicated_at",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "latest_request_sent_at",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "maintainer_email",
              "type": "str",
              "is_property": true
            },
            {
              "name": "maintainer_name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "notes_count",
              "type": "int",
              "is_property": true
            },
            {
              "name": "open_registrations",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "software_name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "software_version",
              "type": "str",
              "is_property": true
            },
            {
              "name": "theme_color",
              "type": "str",
              "is_property": true
            },
            {
              "name": "users_count",
              "type": "int",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.chart",
      "classes": [
        {
          "name": "ActiveUsersChart",
          "attributes": [
            {
              "name": "read",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "read_write",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "registered_outside_month",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "registered_outside_week",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "registered_outside_year",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "registered_within_month",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "registered_within_week",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "registered_within_year",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "write",
              "type": "list[int]",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "DriveChart",
          "attributes": [
            {
              "name": "local",
              "type": "mipac.models.chart.DriveLocalChart",
              "is_property": true
            },
            {
              "name": "remote",
              "type": "mipac.models.chart.DriveRemoteChart",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "DriveLocalChart",
          "attributes": [
            {
              "name": "dec_count",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "dec_size",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "inc_count",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "inc_size",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "total_count",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "total_size",
              "type": "list[int]",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "DriveRemoteChart",
          "attributes": [
            {
              "name": "dec_count",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "dec_size",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "inc_count",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "inc_size",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "total_count",
              "type": "list[int]",
              "is_property": true
            },
            {
              "name": "total_size",
              "type": "list[int]",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.notification",
      "classes": [
        {
          "name": "Notification",
          "attributes": [
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NotificationAchievement",
          "attributes": [
            {
              "name": "achievement",
              "type": "str",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NotificationFollow",
          "attributes": [
            {
              "name": "api",
              "type": "FollowManager",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            },
            {
              "name": "user",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NotificationFollowRequest",
          "attributes": [
            {
              "name": "api",
              "type": "FollowRequestManager",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            },
            {
              "name": "user",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NotificationNote",
          "attributes": [
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "note",
              "type": "Note",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            },
            {
              "name": "user",
              "type": "LiteUser",
              "is_property": true
            },
            {
              "name": "user_id",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NotificationPollEnd",
          "attributes": [
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "note",
              "type": "Note",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "NotificationReaction",
          "attributes": [
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "note",
              "type": "Note",
              "is_property": true
            },
            {
              "name": "reaction",
              "type": "str",
              "is_property": true
            },
            {
              "name": "type",
              "type": "str",
              "is_property": true
            },
            {
              "name": "user",
              "type": "LiteUser",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.announcement",
      "classes": [
        {
          "name": "Announcement",
          "attributes": [
            {
              "name": "action",
              "type": "AdminAnnouncementClientActions",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "is_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "text",
              "type": "str",
              "is_property": true
            },
            {
              "name": "title",
              "type": "str",
              "is_property": true
            },
            {
              "name": "updated_at",
              "type": "datetime | None",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "AnnouncementCommon",
          "attributes": [
            {
              "name": "action",
              "type": "AdminAnnouncementClientActions",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "text",
              "type": "str",
              "is_property": true
            },
            {
              "name": "title",
              "type": "str",
              "is_property": true
            },
            {
              "name": "updated_at",
              "type": "datetime | None",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "AnnouncementSystem",
          "attributes": [
            {
              "name": "action",
              "type": "AdminAnnouncementClientActions",
              "is_property": true
            },
            {
              "name": "created_at",
              "type": "datetime",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "reads",
              "type": "int",
              "is_property": true
            },
            {
              "name": "text",
              "type": "str",
              "is_property": true
            },
            {
              "name": "title",
              "type": "str",
              "is_property": true
            },
            {
              "name": "updated_at",
              "type": "datetime | None",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.emoji",
      "classes": [
        {
          "name": "CustomEmoji",
          "attributes": [
            {
              "name": "aliases",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "category",
              "type": "str",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "url",
              "type": "str | None",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.meta",
      "classes": [
        {
          "name": "AdminMeta",
          "attributes": [
            {
              "name": "ads",
              "type": "list[IAds] | None",
              "is_property": true
            },
            {
              "name": "banner_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "blocked_hosts",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "cache_remote_files",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "discord_client_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "discord_client_secret",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "drive_capacity_per_local_user_mb",
              "type": "int | None",
              "is_property": true
            },
            {
              "name": "drive_capacity_per_remote_user_mb",
              "type": "int | None",
              "is_property": true
            },
            {
              "name": "email",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "email_required_for_signup",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "emojis",
              "type": "list[CustomEmoji]",
              "is_property": true
            },
            {
              "name": "enable_active_email_validation",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_discord_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_email",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_github_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_hcaptch",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_ip_logging",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_recaptcha",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_sensitive_media_detection_for_videos",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_service_worker",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_twitter_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "error_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "github_client_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "github_client_secret",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "hcaptcha_secret_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "hcaptcha_site_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "hidden_tags",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "icon_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "mascot_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "max_note_text_length",
              "type": "int",
              "is_property": true
            },
            {
              "name": "object_storage_access_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_base_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_bucket",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_endpoint",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_port",
              "type": "int | None",
              "is_property": true
            },
            {
              "name": "object_storage_prefix",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_region",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_s3_force_path_style",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "object_storage_secret_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_set_public_read",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "object_storage_use_proxy",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "object_storage_use_ssl",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "pinned_users",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "proxy_account_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "proxy_account_name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "recaptcha_secret_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "recaptcha_site_key",
              "type": "str",
              "is_property": true
            },
            {
              "name": "sensitive_media_detection",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "sensitive_media_detection_sensitivity",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "set_sensitive_flag_automatically",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "smtp_host",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "smtp_pass",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "smtp_port",
              "type": "int | None",
              "is_property": true
            },
            {
              "name": "smtp_secure",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "smtp_user",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "summary_proxy",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "sw_private_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "sw_publickey",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "translator_available",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "twitter_consumer_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "twitter_consumer_secret",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "use_object_storage",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "use_star_for_reaction_fallback",
              "type": "bool",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "Features",
          "attributes": [
            {
              "name": "discord",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "elasticsearch",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "email_required_for_signup",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "github",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "global_time_line",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "hcaptcha",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "local_time_line",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "miauth",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "object_storage",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "recaptcha",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "registration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "service_worker",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "twitter",
              "type": "bool",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "Meta",
          "attributes": [
            {
              "name": "ads",
              "type": "list[IAds] | None",
              "is_property": true
            },
            {
              "name": "announcements",
              "type": "list[IMetaAnnouncement] | None",
              "is_property": true
            },
            {
              "name": "background_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "banner_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "cache_remote_files",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "cpu",
              "type": "CPU | None",
              "is_property": true
            },
            {
              "name": "default_dark_theme",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "default_light_theme",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "description",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "disable_global_timeline",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "disable_local_timeline",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "disable_registration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "email_required_for_signup",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "emojis",
              "type": "list[CustomEmoji]",
              "is_property": true
            },
            {
              "name": "enable_discord_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_email",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_emoji_reaction",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_github_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_hcaptch",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_recaptcha",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_service_worker",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_twitter_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "error_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "features",
              "type": "Features",
              "is_property": true
            },
            {
              "name": "feedback_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "hcaptcha_site_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "icon_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "logo_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "machine",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "maintainer_email",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "maintainer_name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "mascot_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "max_note_text_length",
              "type": "int",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "node",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_s3_force_path_style",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "os",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "pinned_clip_id",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "pinned_pages",
              "type": "list[str]",
              "is_property": true
            },
            {
              "name": "policies",
              "type": "Policies | None",
              "is_property": true
            },
            {
              "name": "proxy_account",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "proxy_account_name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "proxy_remote_files",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "psql",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "recaptcha_site_key",
              "type": "str",
              "is_property": true
            },
            {
              "name": "redis",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "repository_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "require_setup",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "secure",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "summaly_proxy",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "sw_publickey",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "theme_color",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "tos_text_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "tos_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "translator_available",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "turnstile_secret_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "uri",
              "type": "str",
              "is_property": true
            },
            {
              "name": "use_star_for_reaction_fallback",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "version",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "Policies",
          "attributes": [
            {
              "name": "antenna_limit",
              "type": "int",
              "is_property": true
            },
            {
              "name": "can_hide_ads",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "can_invite",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "can_manage_custom_emojis",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "can_public_note",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "clip_limit",
              "type": "int",
              "is_property": true
            },
            {
              "name": "drive_capacity_mb",
              "type": "int",
              "is_property": true
            },
            {
              "name": "gtl_available",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "ltl_available",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "note_each_clips_limit",
              "type": "int",
              "is_property": true
            },
            {
              "name": "pin_limit",
              "type": "int",
              "is_property": true
            },
            {
              "name": "rate_limit_factor",
              "type": "int",
              "is_property": true
            },
            {
              "name": "user_each_user_lists_limit",
              "type": "int",
              "is_property": true
            },
            {
              "name": "user_list_limit",
              "type": "int",
              "is_property": true
            },
            {
              "name": "webhook_limit",
              "type": "int",
              "is_property": true
            },
            {
              "name": "word_mute_limit",
              "type": "int",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.lite.user",
      "classes": [
        {
          "name": "LiteUser",
          "attributes": [
            {
              "name": "api",
              "type": "UserManager",
              "is_property": true
            },
            {
              "name": "avatar_blurhash",
              "type": "str",
              "is_property": true
            },
            {
              "name": "avatar_color",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "avatar_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "emojis",
              "type": "list[ICustomEmojiLite]",
              "is_property": true
            },
            {
              "name": "host",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "id",
              "type": "str",
              "is_property": true
            },
            {
              "name": "instance",
              "type": "LiteInstance | None",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "nickname",
              "type": "str",
              "is_property": true
            },
            {
              "name": "online_status",
              "type": "Literal['online', 'active', 'offline', 'unknown']",
              "is_property": true
            },
            {
              "name": "username",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.lite.instance",
      "classes": [
        {
          "name": "LiteInstance",
          "attributes": [
            {
              "name": "name",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": [
            {
              "name": "favicon_url",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "icon_url",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "software_name",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "software_version",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "theme_color",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "str"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.lite.emoji",
      "classes": [
        {
          "name": "PartialCustomEmoji",
          "attributes": [
            {
              "name": "name",
              "type": "str",
              "is_property": true
            },
            {
              "name": "url",
              "type": "str | None",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.models.lite.meta",
      "classes": [
        {
          "name": "CPU",
          "attributes": [
            {
              "name": "cores",
              "type": "int",
              "is_property": true
            },
            {
              "name": "model",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "LiteMeta",
          "attributes": [
            {
              "name": "ads",
              "type": "list[IAds] | None",
              "is_property": true
            },
            {
              "name": "announcements",
              "type": "list[IMetaAnnouncement] | None",
              "is_property": true
            },
            {
              "name": "background_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "banner_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "cache_remote_files",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "cpu",
              "type": "CPU | None",
              "is_property": true
            },
            {
              "name": "default_dark_theme",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "default_light_theme",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "description",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "disable_global_timeline",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "disable_local_timeline",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "disable_registration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "email_required_for_signup",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "emojis",
              "type": "list[CustomEmoji]",
              "is_property": true
            },
            {
              "name": "enable_discord_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_email",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_emoji_reaction",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_github_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_hcaptch",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_recaptcha",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_service_worker",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_twitter_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "error_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "feedback_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "hcaptcha_site_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "icon_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "logo_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "machine",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "maintainer_email",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "maintainer_name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "mascot_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "max_note_text_length",
              "type": "int",
              "is_property": true
            },
            {
              "name": "name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "node",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "object_storage_s3_force_path_style",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "os",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "proxy_account",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "proxy_account_name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "proxy_remote_files",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "psql",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "recaptcha_site_key",
              "type": "str",
              "is_property": true
            },
            {
              "name": "redis",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "repository_url",
              "type": "str",
              "is_property": true
            },
            {
              "name": "secure",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "summaly_proxy",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "sw_publickey",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "theme_color",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "tos_text_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "tos_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "translator_available",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "turnstile_secret_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "uri",
              "type": "str",
              "is_property": true
            },
            {
              "name": "use_star_for_reaction_fallback",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "version",
              "type": "str",
              "is_property": true
            }
          ],
          "methods": []
        },
        {
          "name": "MetaCommon",
          "attributes": [
            {
              "name": "ads",
              "type": "list[IAds] | None",
              "is_property": true
            },
            {
              "name": "banner_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "cache_remote_files",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "email_required_for_signup",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "emojis",
              "type": "list[CustomEmoji]",
              "is_property": true
            },
            {
              "name": "enable_discord_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_email",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_github_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_hcaptch",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_recaptcha",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_service_worker",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "enable_twitter_integration",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "error_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "hcaptcha_site_key",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "icon_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "mascot_image_url",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "max_note_text_length",
              "type": "int",
              "is_property": true
            },
            {
              "name": "object_storage_s3_force_path_style",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "proxy_account_name",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "recaptcha_site_key",
              "type": "str",
              "is_property": true
            },
            {
              "name": "sw_publickey",
              "type": "str | None",
              "is_property": true
            },
            {
              "name": "translator_available",
              "type": "bool",
              "is_property": true
            },
            {
              "name": "use_star_for_reaction_fallback",
              "type": "bool",
              "is_property": true
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.poll",
      "classes": [
        {
          "name": "PollActions",
          "attributes": [],
          "methods": [
            {
              "name": "recommendation",
              "is_async": false,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "offset",
                  "type": "int"
                },
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "vote",
              "is_async": true,
              "args": [
                {
                  "name": "choice",
                  "type": "int"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.mute",
      "classes": [
        {
          "name": "MuteActions",
          "attributes": [],
          "methods": [
            {
              "name": "add",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "gets",
              "is_async": false,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "AsyncGenerator[MuteUser, None]"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.reaction",
      "classes": [
        {
          "name": "ReactionActions",
          "attributes": [],
          "methods": [
            {
              "name": "add",
              "is_async": true,
              "args": [
                {
                  "name": "reaction",
                  "type": "str"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "get_emoji_list",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "list[CustomEmoji]"
            },
            {
              "name": "get_reaction",
              "is_async": true,
              "args": [
                {
                  "name": "reaction",
                  "type": "str"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "limit",
                  "type": "int"
                }
              ],
              "return_type": "list[NoteReaction]"
            },
            {
              "name": "remove",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.chat",
      "classes": [
        {
          "name": "BaseChatAction",
          "attributes": [],
          "methods": [
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "message_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "read",
              "is_async": true,
              "args": [
                {
                  "name": "message_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        },
        {
          "name": "ChatAction",
          "attributes": [],
          "methods": [
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "message_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "get_history",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "group",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "read",
              "is_async": true,
              "args": [
                {
                  "name": "message_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "send",
              "is_async": true,
              "args": [
                {
                  "name": "text",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "file_id",
                  "type": "str | None"
                },
                {
                  "name": "user_id",
                  "type": "str | None"
                },
                {
                  "name": "group_id",
                  "type": "str | None"
                }
              ],
              "return_type": "ChatMessage"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.follow",
      "classes": [
        {
          "name": "FollowActions",
          "attributes": [],
          "methods": [
            {
              "name": "add",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "LiteUser"
            },
            {
              "name": "invalidate",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "LiteUser"
            },
            {
              "name": "remove",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "LiteUser"
            }
          ]
        },
        {
          "name": "FollowRequestActions",
          "attributes": [],
          "methods": [
            {
              "name": "accept",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "cancel",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "LiteUser"
            },
            {
              "name": "get_all",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "list[FollowRequest]"
            },
            {
              "name": "reject",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.favorite",
      "classes": [
        {
          "name": "FavoriteActions",
          "attributes": [],
          "methods": [
            {
              "name": "add",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "remove",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.user",
      "classes": [
        {
          "name": "UserActions",
          "attributes": [],
          "methods": [
            {
              "name": "fetch",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                },
                {
                  "name": "username",
                  "type": "str | None"
                },
                {
                  "name": "host",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "UserDetailed"
            },
            {
              "name": "wrapper",
              "is_async": true,
              "args": [
                {
                  "name": "args",
                  "type": "Any"
                },
                {
                  "name": "kwargs",
                  "type": "Any"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "get_achievements",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[Achievement]"
            },
            {
              "name": "get_me",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "UserDetailed"
            },
            {
              "name": "get_mention",
              "is_async": false,
              "args": [
                {
                  "name": "user",
                  "type": "Optional[LiteUser]"
                }
              ],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "get_notes",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                },
                {
                  "name": "include_replies",
                  "type": "bool"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "since_date",
                  "type": "int"
                },
                {
                  "name": "until_date",
                  "type": "int"
                },
                {
                  "name": "include_my_renotes",
                  "type": "bool"
                },
                {
                  "name": "with_files",
                  "type": "bool"
                },
                {
                  "name": "file_type",
                  "type": "Optional[list[str]]"
                },
                {
                  "name": "exclude_nsfw",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "list[Note]"
            },
            {
              "name": "get_profile_link",
              "is_async": false,
              "args": [
                {
                  "name": "external",
                  "type": "bool"
                },
                {
                  "name": "protocol",
                  "type": "Literal['http', 'https']"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "search",
              "is_async": false,
              "args": [
                {
                  "name": "query",
                  "type": "str"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "offset",
                  "type": "int"
                },
                {
                  "name": "origin",
                  "type": "Literal['local', 'remote', 'combined']"
                },
                {
                  "name": "detail",
                  "type": "bool"
                }
              ],
              "kwargs": [
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "return_type": "AsyncGenerator[UserDetailed | LiteUser, None]"
            },
            {
              "name": "search_by_username_and_host",
              "is_async": true,
              "args": [
                {
                  "name": "username",
                  "type": "str"
                },
                {
                  "name": "host",
                  "type": "str"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "detail",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "list[UserDetailed | LiteUser]"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.note",
      "classes": [
        {
          "name": "ClientNoteActions",
          "attributes": [],
          "methods": [
            {
              "name": "add_clips",
              "is_async": true,
              "args": [
                {
                  "name": "clip_id",
                  "type": "str"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "create_quote",
              "is_async": true,
              "args": [
                {
                  "name": "content",
                  "type": "str | None"
                },
                {
                  "name": "visibility",
                  "type": "str"
                },
                {
                  "name": "visible_user_ids",
                  "type": "list[str] | None"
                },
                {
                  "name": "cw",
                  "type": "str | None"
                },
                {
                  "name": "local_only",
                  "type": "bool"
                },
                {
                  "name": "extract_mentions",
                  "type": "bool"
                },
                {
                  "name": "extract_hashtags",
                  "type": "bool"
                },
                {
                  "name": "extract_emojis",
                  "type": "bool"
                },
                {
                  "name": "files",
                  "type": "list[MiFile | File | str] | None"
                },
                {
                  "name": "poll",
                  "type": "MiPoll | None"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Note"
            },
            {
              "name": "create_renote",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Note"
            },
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "get_children",
              "is_async": false,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "untilId",
                  "type": "str | None"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                },
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "AsyncGenerator[Note, None]"
            },
            {
              "name": "get_reaction",
              "is_async": true,
              "args": [
                {
                  "name": "reaction",
                  "type": "str"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[NoteReaction]"
            },
            {
              "name": "get_state",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "NoteState"
            },
            {
              "name": "reply",
              "is_async": true,
              "args": [
                {
                  "name": "content",
                  "type": "str | None"
                },
                {
                  "name": "visibility",
                  "type": "str"
                },
                {
                  "name": "visible_user_ids",
                  "type": "list[str] | None"
                },
                {
                  "name": "cw",
                  "type": "str | None"
                },
                {
                  "name": "local_only",
                  "type": "bool"
                },
                {
                  "name": "extract_mentions",
                  "type": "bool"
                },
                {
                  "name": "extract_hashtags",
                  "type": "bool"
                },
                {
                  "name": "extract_emojis",
                  "type": "bool"
                },
                {
                  "name": "files",
                  "type": "list[MiFile | File | str] | None"
                },
                {
                  "name": "poll",
                  "type": "MiPoll | None"
                },
                {
                  "name": "reply_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Note"
            },
            {
              "name": "wrapper",
              "is_async": true,
              "args": [
                {
                  "name": "args",
                  "type": "Any"
                },
                {
                  "name": "kwargs",
                  "type": "Any"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "un_renote",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        },
        {
          "name": "NoteActions",
          "attributes": [],
          "methods": [
            {
              "name": "add_clips",
              "is_async": true,
              "args": [
                {
                  "name": "clip_id",
                  "type": "str"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "create_quote",
              "is_async": true,
              "args": [
                {
                  "name": "content",
                  "type": "str | None"
                },
                {
                  "name": "visibility",
                  "type": "str"
                },
                {
                  "name": "visible_user_ids",
                  "type": "list[str] | None"
                },
                {
                  "name": "cw",
                  "type": "str | None"
                },
                {
                  "name": "local_only",
                  "type": "bool"
                },
                {
                  "name": "extract_mentions",
                  "type": "bool"
                },
                {
                  "name": "extract_hashtags",
                  "type": "bool"
                },
                {
                  "name": "extract_emojis",
                  "type": "bool"
                },
                {
                  "name": "files",
                  "type": "list[MiFile | File | str] | None"
                },
                {
                  "name": "poll",
                  "type": "MiPoll | None"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Note"
            },
            {
              "name": "create_renote",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Note"
            },
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "wrapper",
              "is_async": true,
              "args": [
                {
                  "name": "args",
                  "type": "Any"
                },
                {
                  "name": "kwargs",
                  "type": "Any"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "wrapper",
              "is_async": true,
              "args": [
                {
                  "name": "args",
                  "type": "Any"
                },
                {
                  "name": "kwargs",
                  "type": "Any"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "get_children",
              "is_async": false,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "untilId",
                  "type": "str | None"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                },
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "AsyncGenerator[Note, None]"
            },
            {
              "name": "get_reaction",
              "is_async": true,
              "args": [
                {
                  "name": "reaction",
                  "type": "str"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[NoteReaction]"
            },
            {
              "name": "get_replies",
              "is_async": true,
              "args": [
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[Note]"
            },
            {
              "name": "get_state",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "NoteState"
            },
            {
              "name": "gets",
              "is_async": false,
              "args": [
                {
                  "name": "local",
                  "type": "bool"
                },
                {
                  "name": "reply",
                  "type": "bool"
                },
                {
                  "name": "renote",
                  "type": "bool"
                },
                {
                  "name": "with_files",
                  "type": "bool"
                },
                {
                  "name": "poll",
                  "type": "bool"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "return_type": "AsyncGenerator[Note, None]"
            },
            {
              "name": "reply",
              "is_async": true,
              "args": [
                {
                  "name": "content",
                  "type": "str | None"
                },
                {
                  "name": "visibility",
                  "type": "str"
                },
                {
                  "name": "visible_user_ids",
                  "type": "list[str] | None"
                },
                {
                  "name": "cw",
                  "type": "str | None"
                },
                {
                  "name": "local_only",
                  "type": "bool"
                },
                {
                  "name": "extract_mentions",
                  "type": "bool"
                },
                {
                  "name": "extract_hashtags",
                  "type": "bool"
                },
                {
                  "name": "extract_emojis",
                  "type": "bool"
                },
                {
                  "name": "files",
                  "type": "list[MiFile | File | str] | None"
                },
                {
                  "name": "poll",
                  "type": "MiPoll | None"
                },
                {
                  "name": "reply_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Note"
            },
            {
              "name": "send",
              "is_async": true,
              "args": [
                {
                  "name": "content",
                  "type": "str | None"
                },
                {
                  "name": "visibility",
                  "type": "str"
                },
                {
                  "name": "visible_user_ids",
                  "type": "list[str] | None"
                },
                {
                  "name": "cw",
                  "type": "str | None"
                },
                {
                  "name": "local_only",
                  "type": "bool"
                },
                {
                  "name": "extract_mentions",
                  "type": "bool"
                },
                {
                  "name": "extract_hashtags",
                  "type": "bool"
                },
                {
                  "name": "extract_emojis",
                  "type": "bool"
                },
                {
                  "name": "reply_id",
                  "type": "str | None"
                },
                {
                  "name": "renote_id",
                  "type": "str | None"
                },
                {
                  "name": "channel_id",
                  "type": "str | None"
                },
                {
                  "name": "files",
                  "type": "list[MiFile | File | str] | None"
                },
                {
                  "name": "poll",
                  "type": "MiPoll | None"
                }
              ],
              "kwargs": [],
              "return_type": "Note"
            },
            {
              "name": "wrapper",
              "is_async": true,
              "args": [
                {
                  "name": "args",
                  "type": "Any"
                },
                {
                  "name": "kwargs",
                  "type": "Any"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "un_renote",
              "is_async": true,
              "args": [
                {
                  "name": "note_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "create_note_body",
          "is_async": false,
          "args": [
            {
              "name": "content",
              "type": "str | None"
            },
            {
              "name": "visibility",
              "type": "str"
            },
            {
              "name": "visible_user_ids",
              "type": "list[str] | None"
            },
            {
              "name": "cw",
              "type": "str | None"
            },
            {
              "name": "local_only",
              "type": "bool"
            },
            {
              "name": "extract_mentions",
              "type": "bool"
            },
            {
              "name": "extract_hashtags",
              "type": "bool"
            },
            {
              "name": "extract_emojis",
              "type": "bool"
            },
            {
              "name": "reply_id",
              "type": "str | None"
            },
            {
              "name": "renote_id",
              "type": "str | None"
            },
            {
              "name": "channel_id",
              "type": "str | None"
            },
            {
              "name": "files",
              "type": "list[MiFile | File | str] | None"
            },
            {
              "name": "poll",
              "type": "MiPoll | None"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "mipac.actions.drive",
      "classes": [
        {
          "name": "DriveActions",
          "attributes": [],
          "methods": [
            {
              "name": "get_folders",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "folder_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[Folder]"
            }
          ]
        },
        {
          "name": "FileActions",
          "attributes": [],
          "methods": [
            {
              "name": "get_files",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "folder_id",
                  "type": "str | None"
                },
                {
                  "name": "file_type",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[File]"
            },
            {
              "name": "remove_file",
              "is_async": true,
              "args": [
                {
                  "name": "file_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "show_file",
              "is_async": true,
              "args": [
                {
                  "name": "file_id",
                  "type": "str | None"
                },
                {
                  "name": "url",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "File"
            },
            {
              "name": "upload_file",
              "is_async": true,
              "args": [
                {
                  "name": "file",
                  "type": "str"
                },
                {
                  "name": "file_name",
                  "type": "str | None"
                },
                {
                  "name": "folder_id",
                  "type": "str | None"
                },
                {
                  "name": "comment",
                  "type": "str | None"
                },
                {
                  "name": "is_sensitive",
                  "type": "bool"
                },
                {
                  "name": "force",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "File"
            }
          ]
        },
        {
          "name": "FolderActions",
          "attributes": [],
          "methods": [
            {
              "name": "create",
              "is_async": true,
              "args": [
                {
                  "name": "name",
                  "type": "str"
                },
                {
                  "name": "parent_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "folder_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "get_files",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "folder_id",
                  "type": "str | None"
                },
                {
                  "name": "file_type",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[File]"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.client",
      "classes": [
        {
          "name": "ClientActions",
          "attributes": [],
          "methods": [
            {
              "name": "get_announcements",
              "is_async": false,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "with_unreads",
                  "type": "bool"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "return_type": "AsyncGenerator[Announcement, None]"
            },
            {
              "name": "get_meta",
              "is_async": true,
              "args": [
                {
                  "name": "detail",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.chart",
      "classes": [
        {
          "name": "ChartActions",
          "attributes": [],
          "methods": [
            {
              "name": "get_active_user",
              "is_async": true,
              "args": [
                {
                  "name": "span",
                  "type": "str"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "offset",
                  "type": "int"
                }
              ],
              "kwargs": [],
              "return_type": "ActiveUsersChart"
            },
            {
              "name": "get_drive",
              "is_async": true,
              "args": [
                {
                  "name": "span",
                  "type": "str"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "offset",
                  "type": "int"
                }
              ],
              "kwargs": [],
              "return_type": "DriveChart"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.federation",
      "classes": [
        {
          "name": "FederationActions",
          "attributes": [],
          "methods": [
            {
              "name": "get_ap",
              "is_async": true,
              "args": [
                {
                  "name": "uri",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "dict[Any, Any]"
            },
            {
              "name": "get_followers",
              "is_async": true,
              "args": [
                {
                  "name": "host",
                  "type": "str"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "get_following",
              "is_async": true,
              "args": [
                {
                  "name": "host",
                  "type": "str"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "get_instances",
              "is_async": true,
              "args": [
                {
                  "name": "host",
                  "type": "str | None"
                },
                {
                  "name": "blocked",
                  "type": "bool | None"
                },
                {
                  "name": "not_responding",
                  "type": "bool | None"
                },
                {
                  "name": "suspended",
                  "type": "bool | None"
                },
                {
                  "name": "federating",
                  "type": "bool | None"
                },
                {
                  "name": "subscribing",
                  "type": "bool | None"
                },
                {
                  "name": "publishing",
                  "type": "bool | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "offset",
                  "type": "int"
                },
                {
                  "name": "sort",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[FederationInstance]"
            },
            {
              "name": "get_stats",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                }
              ],
              "kwargs": [],
              "return_type": "IFederationInstanceStat"
            },
            {
              "name": "get_users",
              "is_async": true,
              "args": [
                {
                  "name": "host",
                  "type": "str"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                }
              ],
              "kwargs": [],
              "return_type": "UserDetailed"
            },
            {
              "name": "show_ap",
              "is_async": true,
              "args": [
                {
                  "name": "host",
                  "type": "str"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                }
              ],
              "kwargs": [],
              "return_type": "FederationInstance"
            },
            {
              "name": "show_instance",
              "is_async": true,
              "args": [
                {
                  "name": "host",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "FederationInstance"
            },
            {
              "name": "update_remote_user",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.my",
      "classes": [
        {
          "name": "MyActions",
          "attributes": [],
          "methods": [
            {
              "name": "fetch_follow_requests",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.admins.moderator",
      "classes": [
        {
          "name": "AdminModeratorActions",
          "attributes": [],
          "methods": [
            {
              "name": "add",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "remove",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.admins.user",
      "classes": [
        {
          "name": "AdminUserActions",
          "attributes": [],
          "methods": [
            {
              "name": "delete_account",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "show_user",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "UserDetailed"
            },
            {
              "name": "suspend",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "unsuspend",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.admins.admin",
      "classes": [
        {
          "name": "AdminActions",
          "attributes": [],
          "methods": [
            {
              "name": "fetch_server_info",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "ServerInfo"
            },
            {
              "name": "get_index_stats",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "list[IndexStat]"
            },
            {
              "name": "get_invite",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "get_meta",
              "is_async": true,
              "args": [
                {
                  "name": "detail",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "AdminMeta"
            },
            {
              "name": "get_moderation_logs",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "ModerationLog"
            },
            {
              "name": "wrapper",
              "is_async": true,
              "args": [
                {
                  "name": "args",
                  "type": "Any"
                },
                {
                  "name": "kwargs",
                  "type": "Any"
                }
              ],
              "kwargs": [],
              "return_type": "Any"
            },
            {
              "name": "get_table_stats",
              "is_async": true,
              "args": [],
              "kwargs": [],
              "return_type": "dict[str, ITableStats]"
            },
            {
              "name": "get_user_ips",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "list[UserIP]"
            },
            {
              "name": "reset_password",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "str"
            },
            {
              "name": "resolve_abuse_user_report",
              "is_async": true,
              "args": [
                {
                  "name": "report_id",
                  "type": "str"
                },
                {
                  "name": "forward",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "send_email",
              "is_async": true,
              "args": [
                {
                  "name": "to",
                  "type": "str"
                },
                {
                  "name": "subject",
                  "type": "str"
                },
                {
                  "name": "text",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "show_user",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "UserDetailed"
            },
            {
              "name": "show_users",
              "is_async": true,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "offset",
                  "type": "int"
                },
                {
                  "name": "sort",
                  "type": "str | None"
                },
                {
                  "name": "state",
                  "type": "str"
                },
                {
                  "name": "origin",
                  "type": "str"
                },
                {
                  "name": "username",
                  "type": "str | None"
                },
                {
                  "name": "hostname",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "list[UserDetailed]"
            },
            {
              "name": "silence_user",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "suspend_user",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "unsilence_user",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "unsuspend_user",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "update_meta",
              "is_async": true,
              "args": [
                {
                  "name": "meta",
                  "type": "IUpdateMetaBody"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "update_user_note",
              "is_async": true,
              "args": [
                {
                  "name": "user_id",
                  "type": "str"
                },
                {
                  "name": "text",
                  "type": "str"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "vacuum",
              "is_async": true,
              "args": [
                {
                  "name": "full",
                  "type": "bool"
                },
                {
                  "name": "analyze",
                  "type": "bool"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.admins.announcement",
      "classes": [
        {
          "name": "AdminAnnouncementActions",
          "attributes": [],
          "methods": [
            {
              "name": "create",
              "is_async": true,
              "args": [
                {
                  "name": "title",
                  "type": "str"
                },
                {
                  "name": "text",
                  "type": "str"
                },
                {
                  "name": "image_url",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "Announcement"
            },
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "announce_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "gets",
              "is_async": false,
              "args": [
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "AsyncGenerator[AnnouncementSystem, None]"
            },
            {
              "name": "update",
              "is_async": true,
              "args": [
                {
                  "name": "title",
                  "type": "str"
                },
                {
                  "name": "text",
                  "type": "str"
                },
                {
                  "name": "image_url",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "announce_id",
                  "type": "str | None"
                }
              ],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AdminAnnouncementClientActions",
          "attributes": [],
          "methods": [
            {
              "name": "delete",
              "is_async": true,
              "args": [
                {
                  "name": "announce_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            },
            {
              "name": "update",
              "is_async": true,
              "args": [
                {
                  "name": "title",
                  "type": "str"
                },
                {
                  "name": "text",
                  "type": "str"
                },
                {
                  "name": "image_url",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "announce_id",
                  "type": "str | None"
                }
              ],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.actions.admins.emoji",
      "classes": [
        {
          "name": "AdminEmojiActions",
          "attributes": [],
          "methods": [
            {
              "name": "add",
              "is_async": true,
              "args": [
                {
                  "name": "file_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "name",
                  "type": "str | None"
                },
                {
                  "name": "url",
                  "type": "str | None"
                },
                {
                  "name": "category",
                  "type": "str | None"
                },
                {
                  "name": "aliases",
                  "type": "list[str] | None"
                }
              ],
              "return_type": "bool"
            },
            {
              "name": "gets",
              "is_async": false,
              "args": [
                {
                  "name": "query",
                  "type": "str | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "return_type": "AsyncGenerator[CustomEmoji, None]"
            },
            {
              "name": "gets_remote",
              "is_async": false,
              "args": [
                {
                  "name": "query",
                  "type": "str | None"
                },
                {
                  "name": "host",
                  "type": "str | None"
                },
                {
                  "name": "limit",
                  "type": "int"
                },
                {
                  "name": "since_id",
                  "type": "str | None"
                },
                {
                  "name": "until_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [
                {
                  "name": "all",
                  "type": "bool"
                }
              ],
              "return_type": "AsyncGenerator[CustomEmoji, None]"
            },
            {
              "name": "remove",
              "is_async": true,
              "args": [
                {
                  "name": "emoji_id",
                  "type": "str | None"
                }
              ],
              "kwargs": [],
              "return_type": "bool"
            }
          ]
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.poll",
      "classes": [
        {
          "name": "IBasePoll",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ICreatePoll",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IPoll",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IPollChoice",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.mute",
      "classes": [
        {
          "name": "IMuteUser",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.reaction",
      "classes": [
        {
          "name": "NoteReactionPayload",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.chat",
      "classes": [
        {
          "name": "IChatGroup",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IChatMessage",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.follow",
      "classes": [
        {
          "name": "IFederationFollowCommon",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFederationFollower",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFederationFollowing",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFollowRequest",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.channel",
      "classes": [
        {
          "name": "IChannel",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.user",
      "classes": [
        {
          "name": "IAchievement",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFollowRequest",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ILiteUser",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ISignin",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IUserDetailed",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IUserDetailedField",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IUserDetailedRequired",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IUserRequired",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.admin",
      "classes": [
        {
          "name": "IIndexStat",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IModerationLog",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IServerInfo",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IServerInfoCpu",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IServerInfoFs",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IServerInfoMem",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IServerInfoNet",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ITableStats",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IUserIP",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.note",
      "classes": [
        {
          "name": "GeoPayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ICreatedNote",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INote",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteReaction",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteRequired",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteState",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteTranslateResult",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteUpdated",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteUpdatedDelete",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteUpdatedDeleteBody",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteUpdatedReaction",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteUpdatedReactionBody",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.drive",
      "classes": [
        {
          "name": "FolderPayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IDriveFile",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFileProperties",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.instance",
      "classes": [
        {
          "name": "IFederationInstance",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFederationInstanceRequired",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFederationInstanceStat",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IInstanceLite",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.chart",
      "classes": [
        {
          "name": "IActiveUsersChart",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IDriveChart",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IDriveLocalChart",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IDriveRemoteChart",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.notification",
      "classes": [
        {
          "name": "IAchievementNf",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INoteNf",
          "attributes": [],
          "methods": []
        },
        {
          "name": "INotification",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IPollEndNf",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IReactionNf",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IUserNf",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.page",
      "classes": [
        {
          "name": "AttachedFilePayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "EyeCatchingImagePayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IPage",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IPageRequired",
          "attributes": [],
          "methods": []
        },
        {
          "name": "PageContentPayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "PageFilePayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "PagePayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "VariablePayload",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.endpoints",
      "classes": [],
      "functions": []
    },
    {
      "name": "mipac.types.announcement",
      "classes": [
        {
          "name": "IAnnouncement",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IAnnouncementCommon",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IAnnouncementSystem",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.ads",
      "classes": [
        {
          "name": "IAds",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.emoji",
      "classes": [
        {
          "name": "EmojiPayload",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ICustomEmoji",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ICustomEmojiLite",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ICustomEmojiLiteRequired",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.types.meta",
      "classes": [
        {
          "name": "IAdminMeta",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ICPU",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ICommonV11",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IFeatures",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ILiteMeta",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ILiteV11Meta",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ILiteV12Meta",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IMeta",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IMetaAnnouncement",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IMetaCommon",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IMetaCommonV12",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IPolicies",
          "attributes": [],
          "methods": []
        },
        {
          "name": "ISharedAdminMeta",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IUpdateMetaBody",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IV11Features",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IV12AdminMeta",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IV12Features",
          "attributes": [],
          "methods": []
        },
        {
          "name": "IV12Meta",
          "attributes": [],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.errors.base",
      "classes": [
        {
          "name": "APIError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NotExistRequiredData",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": []
        },
        {
          "name": "NotSupportVersion",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": []
        },
        {
          "name": "ParameterError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": []
        }
      ],
      "functions": []
    },
    {
      "name": "mipac.errors.errors",
      "classes": [
        {
          "name": "AccessDeniedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyAddedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyBlockingError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyClippedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyExpiredError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyFavoritedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyFollowingError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyInvitedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyLikedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyMutingError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyPinnedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyPromotedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyReactedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AlreadyVotedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "AvatarNotAnImageError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "BannerNotAnImageError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "BlockedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "BlockeeIsYourselfError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "BlockingError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "CannotCreateAlreadyExpiredPollError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "CannotRenoteToAPureRenoteError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "CannotReplyToAPureRenoteError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "CannotReportTheAdminError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "CannotReportYourselfError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "ContentRequiredError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "CredentialRequiredError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "FailedToResolveRemoteUserError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "FollowRequestNotFoundError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "FolloweeIsYourselfError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "FollowerIsYourselfError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "ForbiddenError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "GroupAccessDeniedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "GtlDisabledError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "HasChildFilesOrFoldersError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "InappropriateError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "InternalErrorError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "InvalidChoiceError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "InvalidFileNameError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "InvalidParamError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "InvalidRegexpError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "InvalidUrlError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "IsOwnerError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "LtlDisabledError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "MoSuchFileError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "MuteeIsYourselfError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NameAlreadyExistsError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoFollowRequestError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoFreeSpaceError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoPollError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchAdError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchAnnouncementError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchAntennaError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchAppError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchAvatarError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchBannerError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchChannelError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchClipError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchEmojiError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchFileError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchFolderError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchGroupError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchGroupMemberError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchHashtagError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchInvitationError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchListError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchMessageError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchNoteError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchNotificationError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchObjectError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchPageError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchParentFolderError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchPostError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchRenoteTargetError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchReplyTargetError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchSessionError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchUserError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchUserGroupError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchUserListError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NoSuchWebhookError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NotBlockingError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NotFavoritedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NotFollowingError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NotLikedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NotMutingError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "NotReactedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "PendingSessionError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "PermissionDeniedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "PinLimitExceededError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "RateLimitExceededError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "ReactionsNotPublicError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "RecipientIsYourselfError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "StlDisabledError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "YouAreOwnerError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "YouHaveBeenBlockedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "YourAccountSuspendedError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "YourPageError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        },
        {
          "name": "YourPostError",
          "attributes": [
            {
              "name": "args",
              "type": "<attribute 'args' of 'BaseException' objects>",
              "is_property": false
            }
          ],
          "methods": [
            {
              "name": "raise_error",
              "is_async": false,
              "args": [],
              "kwargs": [],
              "return_type": "Any"
            }
          ]
        }
      ],
      "functions": []
    }
  ],
  "classes": [
    {
      "name": "AuthClient",
      "attributes": [],
      "methods": [
        {
          "name": "check_auth",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "get_auth_url",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "wait_miauth",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "wait_oldauth",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "None"
        }
      ]
    },
    {
      "name": "MiTime",
      "attributes": [],
      "methods": []
    },
    {
      "name": "HTTPClient",
      "attributes": [
        {
          "name": "session",
          "type": "aiohttp.ClientSession",
          "is_property": true
        }
      ],
      "methods": [
        {
          "name": "close_session",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "None"
        },
        {
          "name": "login",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "IUserDetailed"
        },
        {
          "name": "request",
          "is_async": true,
          "args": [
            {
              "name": "route",
              "type": "Route"
            },
            {
              "name": "auth",
              "type": "bool"
            },
            {
              "name": "remove_none",
              "type": "bool"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "R"
        }
      ]
    },
    {
      "name": "MisskeyClientWebSocketResponse",
      "attributes": [
        {
          "name": "client_notakeover",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "close_code",
          "type": "typing.Optional[int]",
          "is_property": true
        },
        {
          "name": "closed",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "compress",
          "type": "int",
          "is_property": true
        },
        {
          "name": "protocol",
          "type": "typing.Optional[str]",
          "is_property": true
        }
      ],
      "methods": [
        {
          "name": "close",
          "is_async": true,
          "args": [],
          "kwargs": [
            {
              "name": "code",
              "type": "int"
            },
            {
              "name": "message",
              "type": "bytes"
            }
          ],
          "return_type": "bool"
        },
        {
          "name": "exception",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "typing.Optional[BaseException]"
        },
        {
          "name": "get_extra_info",
          "is_async": false,
          "args": [
            {
              "name": "name",
              "type": "str"
            },
            {
              "name": "default",
              "type": "typing.Any"
            }
          ],
          "kwargs": [],
          "return_type": "typing.Any"
        },
        {
          "name": "ping",
          "is_async": true,
          "args": [
            {
              "name": "message",
              "type": "bytes"
            }
          ],
          "kwargs": [],
          "return_type": "None"
        },
        {
          "name": "pong",
          "is_async": true,
          "args": [
            {
              "name": "message",
              "type": "bytes"
            }
          ],
          "kwargs": [],
          "return_type": "None"
        },
        {
          "name": "receive",
          "is_async": true,
          "args": [
            {
              "name": "timeout",
              "type": "typing.Optional[float]"
            }
          ],
          "kwargs": [],
          "return_type": "aiohttp.http_websocket.WSMessage"
        },
        {
          "name": "receive_bytes",
          "is_async": true,
          "args": [],
          "kwargs": [
            {
              "name": "timeout",
              "type": "typing.Optional[float]"
            }
          ],
          "return_type": "bytes"
        },
        {
          "name": "receive_json",
          "is_async": true,
          "args": [],
          "kwargs": [
            {
              "name": "loads",
              "type": "typing.Callable[[str], typing.Any]"
            },
            {
              "name": "timeout",
              "type": "typing.Optional[float]"
            }
          ],
          "return_type": "typing.Any"
        },
        {
          "name": "receive_str",
          "is_async": true,
          "args": [],
          "kwargs": [
            {
              "name": "timeout",
              "type": "typing.Optional[float]"
            }
          ],
          "return_type": "str"
        },
        {
          "name": "send_bytes",
          "is_async": true,
          "args": [
            {
              "name": "data",
              "type": "bytes"
            },
            {
              "name": "compress",
              "type": "typing.Optional[int]"
            }
          ],
          "kwargs": [],
          "return_type": "None"
        },
        {
          "name": "send_json",
          "is_async": true,
          "args": [
            {
              "name": "data",
              "type": "typing.Any"
            },
            {
              "name": "compress",
              "type": "typing.Optional[int]"
            }
          ],
          "kwargs": [
            {
              "name": "dumps",
              "type": "typing.Callable[[typing.Any], str]"
            }
          ],
          "return_type": "None"
        },
        {
          "name": "send_str",
          "is_async": true,
          "args": [
            {
              "name": "data",
              "type": "str"
            },
            {
              "name": "compress",
              "type": "typing.Optional[int]"
            }
          ],
          "kwargs": [],
          "return_type": "None"
        }
      ]
    },
    {
      "name": "Route",
      "attributes": [],
      "methods": []
    },
    {
      "name": "_MissingSentinel",
      "attributes": [],
      "methods": []
    },
    {
      "name": "Client",
      "attributes": [
        {
          "name": "api",
          "type": "mipac.manager.client.ClientManager",
          "is_property": true
        }
      ],
      "methods": [
        {
          "name": "close_session",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "None"
        }
      ]
    },
    {
      "name": "MiFile",
      "attributes": [
        {
          "name": "comment",
          "type": "<member 'comment' of 'MiFile' objects>",
          "is_property": false
        },
        {
          "name": "file_id",
          "type": "<member 'file_id' of 'MiFile' objects>",
          "is_property": false
        },
        {
          "name": "folder_id",
          "type": "<member 'folder_id' of 'MiFile' objects>",
          "is_property": false
        },
        {
          "name": "force",
          "type": "<member 'force' of 'MiFile' objects>",
          "is_property": false
        },
        {
          "name": "is_sensitive",
          "type": "<member 'is_sensitive' of 'MiFile' objects>",
          "is_property": false
        },
        {
          "name": "name",
          "type": "<member 'name' of 'MiFile' objects>",
          "is_property": false
        },
        {
          "name": "path",
          "type": "<member 'path' of 'MiFile' objects>",
          "is_property": false
        }
      ],
      "methods": []
    },
    {
      "name": "CacheConfig",
      "attributes": [],
      "methods": []
    },
    {
      "name": "CacheConfigData",
      "attributes": [
        {
          "name": "maxsize",
          "type": "1024",
          "is_property": false
        },
        {
          "name": "ttl",
          "type": "360",
          "is_property": false
        }
      ],
      "methods": []
    },
    {
      "name": "Config",
      "attributes": [],
      "methods": [
        {
          "name": "from_dict",
          "is_async": false,
          "args": [
            {
              "name": "host",
              "type": "str | None"
            },
            {
              "name": "is_ssl",
              "type": "bool | None"
            },
            {
              "name": "is_ayuskey",
              "type": "bool | None"
            },
            {
              "name": "use_version",
              "type": "typing.Optional[typing.Literal[13, 12, 11]]"
            },
            {
              "name": "cache",
              "type": "mipac.config.CacheConfigData | None"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AbstractManager",
      "attributes": [],
      "methods": []
    },
    {
      "name": "AbstractAction",
      "attributes": [],
      "methods": []
    },
    {
      "name": "AbstractModel",
      "attributes": [
        {
          "name": "action",
          "type": "inspect._empty",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "PollManager",
      "attributes": [
        {
          "name": "action",
          "type": "PollActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "MuteManager",
      "attributes": [
        {
          "name": "action",
          "type": "MuteActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ReactionManager",
      "attributes": [
        {
          "name": "action",
          "type": "ReactionActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ChatManager",
      "attributes": [
        {
          "name": "action",
          "type": "ChatAction",
          "is_property": true
        }
      ],
      "methods": [
        {
          "name": "custom_action",
          "is_async": false,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            },
            {
              "name": "message_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "ChatAction"
        },
        {
          "name": "custom_base_chat_action",
          "is_async": false,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            },
            {
              "name": "message_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "BaseChatAction"
        }
      ]
    },
    {
      "name": "FollowManager",
      "attributes": [
        {
          "name": "action",
          "type": "FollowActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FollowRequestManager",
      "attributes": [
        {
          "name": "action",
          "type": "FollowRequestActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FavoriteManager",
      "attributes": [
        {
          "name": "action",
          "type": "FavoriteActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "UserManager",
      "attributes": [
        {
          "name": "action",
          "type": "UserActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ClientNoteManager",
      "attributes": [
        {
          "name": "action",
          "type": "ClientNoteActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NoteManager",
      "attributes": [
        {
          "name": "action",
          "type": "NoteActions",
          "is_property": true
        }
      ],
      "methods": [
        {
          "name": "create_client_note_manager",
          "is_async": false,
          "args": [
            {
              "name": "note_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "ClientNoteManager"
        },
        {
          "name": "get",
          "is_async": true,
          "args": [
            {
              "name": "local",
              "type": "bool"
            },
            {
              "name": "reply",
              "type": "bool"
            },
            {
              "name": "renote",
              "type": "bool"
            },
            {
              "name": "with_files",
              "type": "bool"
            },
            {
              "name": "poll",
              "type": "bool"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "DriveManager",
      "attributes": [
        {
          "name": "action",
          "type": "DriveActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FileManager",
      "attributes": [
        {
          "name": "action",
          "type": "FileActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FolderManager",
      "attributes": [
        {
          "name": "action",
          "type": "FolderActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ClientManager",
      "attributes": [
        {
          "name": "action",
          "type": "ClientActions",
          "is_property": true
        }
      ],
      "methods": [
        {
          "name": "get_me",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "UserDetailed"
        }
      ]
    },
    {
      "name": "ChartManager",
      "attributes": [
        {
          "name": "action",
          "type": "ChartActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "PagesManager",
      "attributes": [],
      "methods": [
        {
          "name": "get_pages",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "int | None"
            },
            {
              "name": "until_id",
              "type": "int | None"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "FederationManager",
      "attributes": [
        {
          "name": "action",
          "type": "FederationActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "MyManager",
      "attributes": [
        {
          "name": "action",
          "type": "inspect._empty",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AdminAdvertisingManager",
      "attributes": [],
      "methods": [
        {
          "name": "create",
          "is_async": true,
          "args": [
            {
              "name": "url",
              "type": "str"
            },
            {
              "name": "memo",
              "type": "str"
            },
            {
              "name": "place",
              "type": "str"
            },
            {
              "name": "priority",
              "type": "str"
            },
            {
              "name": "ratio",
              "type": "str"
            },
            {
              "name": "expires_at",
              "type": "int"
            },
            {
              "name": "image_url",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AdminModeratorManager",
      "attributes": [
        {
          "name": "action",
          "type": "AdminModeratorActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AdminUserManager",
      "attributes": [
        {
          "name": "action",
          "type": "AdminUserActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AdminManager",
      "attributes": [
        {
          "name": "action",
          "type": "AdminActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AdminAnnouncementManager",
      "attributes": [
        {
          "name": "action",
          "type": "AdminAnnouncementActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AdminEmojiManager",
      "attributes": [
        {
          "name": "action",
          "type": "AdminEmojiActions",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "MiPoll",
      "attributes": [],
      "methods": []
    },
    {
      "name": "Poll",
      "attributes": [
        {
          "name": "choices",
          "type": "list[PollChoice]",
          "is_property": true
        },
        {
          "name": "expired_after",
          "type": "int",
          "is_property": true
        },
        {
          "name": "expires_at",
          "type": "int",
          "is_property": true
        },
        {
          "name": "multiple",
          "type": "bool",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "PollChoice",
      "attributes": [
        {
          "name": "is_voted",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "text",
          "type": "str",
          "is_property": true
        },
        {
          "name": "votes",
          "type": "int",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "MuteUser",
      "attributes": [
        {
          "name": "created_at",
          "type": "str",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "mutee",
          "type": "UserDetailed",
          "is_property": true
        },
        {
          "name": "mutee_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "PartialReaction",
      "attributes": [
        {
          "name": "emoji",
          "type": "PartialCustomEmoji",
          "is_property": true
        },
        {
          "name": "reaction",
          "type": "str",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ChatGroup",
      "attributes": [
        {
          "name": "created_at",
          "type": "str",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "owner_id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "user_ids",
          "type": "list[str]",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ChatMessage",
      "attributes": [
        {
          "name": "api",
          "type": "BaseChatAction",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "str",
          "is_property": true
        },
        {
          "name": "file",
          "type": "File | None",
          "is_property": true
        },
        {
          "name": "file_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "group",
          "type": "ChatGroup | None",
          "is_property": true
        },
        {
          "name": "group_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "reads",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "recipient",
          "type": "LiteUser | None",
          "is_property": true
        },
        {
          "name": "recipient_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "text",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "user",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FollowRequest",
      "attributes": [
        {
          "name": "api",
          "type": "FollowRequestManager",
          "is_property": true
        },
        {
          "name": "followee",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "follower",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Channel",
      "attributes": [
        {
          "name": "banner_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "str",
          "is_property": true
        },
        {
          "name": "description",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "has_unread_note",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_following",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "last_noted_at",
          "type": "str",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "notes_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "users_count",
          "type": "int",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Achievement",
      "attributes": [
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "unlocked_at",
          "type": "int",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FollowRequest",
      "attributes": [
        {
          "name": "followee",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "follower",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "UserDetailed",
      "attributes": [
        {
          "name": "achievements",
          "type": "list[Achievement]",
          "is_property": true
        },
        {
          "name": "api",
          "type": "UserManager",
          "is_property": true
        },
        {
          "name": "avatar_blurhash",
          "type": "str",
          "is_property": true
        },
        {
          "name": "avatar_color",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "avatar_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "banner_blurhash",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "banner_color",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "banner_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "birthday",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "description",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "emojis",
          "type": "list[ICustomEmojiLite]",
          "is_property": true
        },
        {
          "name": "ff_visibility",
          "type": "Literal['public', 'followers', 'private'] | None",
          "is_property": true
        },
        {
          "name": "fields",
          "type": "list[IUserDetailedField]",
          "is_property": true
        },
        {
          "name": "followers_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "following_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "has_pending_follow_request_from_you",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "has_pending_follow_request_to_you",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "host",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "instance",
          "type": "LiteInstance | None",
          "is_property": true
        },
        {
          "name": "is_admin",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_blocked",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "is_blocking",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "is_bot",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_cat",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_followed",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "is_following",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "is_locked",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_moderator",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_muted",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "is_silenced",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_suspended",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "lang",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "last_fetched_at",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "location",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "logged_in_days",
          "type": "int | None",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "nickname",
          "type": "str",
          "is_property": true
        },
        {
          "name": "notes_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "online_status",
          "type": "Literal['online', 'active', 'offline', 'unknown']",
          "is_property": true
        },
        {
          "name": "pinned_note_ids",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "pinned_notes",
          "type": "list[Note]",
          "is_property": true
        },
        {
          "name": "pinned_page",
          "type": "IPage | None",
          "is_property": true
        },
        {
          "name": "pinned_page_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "public_reactions",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "security_keys",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "two_factor_enabled",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "updated_at",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "uri",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "use_password_less_login",
          "type": "bool | None",
          "is_property": true
        },
        {
          "name": "username",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "IndexStat",
      "attributes": [
        {
          "name": "indexdef",
          "type": "str",
          "is_property": true
        },
        {
          "name": "indexname",
          "type": "str",
          "is_property": true
        },
        {
          "name": "schemaname",
          "type": "str",
          "is_property": true
        },
        {
          "name": "tablename",
          "type": "str",
          "is_property": true
        },
        {
          "name": "tablespace",
          "type": "str | None",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ModerationLog",
      "attributes": [
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "info",
          "type": "dict",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        },
        {
          "name": "user",
          "type": "UserDetailed",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ServerInfo",
      "attributes": [
        {
          "name": "cpu",
          "type": "ServerInfoCpu",
          "is_property": true
        },
        {
          "name": "fs",
          "type": "ServerInfoFs",
          "is_property": true
        },
        {
          "name": "machine",
          "type": "str",
          "is_property": true
        },
        {
          "name": "mem",
          "type": "ServerInfoMem",
          "is_property": true
        },
        {
          "name": "net",
          "type": "ServerInfoNet",
          "is_property": true
        },
        {
          "name": "node",
          "type": "str",
          "is_property": true
        },
        {
          "name": "os",
          "type": "str",
          "is_property": true
        },
        {
          "name": "psql",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ServerInfoCpu",
      "attributes": [
        {
          "name": "cores",
          "type": "int",
          "is_property": true
        },
        {
          "name": "models",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ServerInfoFs",
      "attributes": [
        {
          "name": "total",
          "type": "int",
          "is_property": true
        },
        {
          "name": "used",
          "type": "int",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ServerInfoMem",
      "attributes": [
        {
          "name": "total",
          "type": "int",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ServerInfoNet",
      "attributes": [
        {
          "name": "interface",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "UserIP",
      "attributes": [
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "ip",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Follow",
      "attributes": [],
      "methods": [
        {
          "name": "follow",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "tuple[bool, str | None]"
        },
        {
          "name": "unfollow",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "Header",
      "attributes": [],
      "methods": []
    },
    {
      "name": "Note",
      "attributes": [
        {
          "name": "api",
          "type": "ClientNoteManager",
          "is_property": true
        },
        {
          "name": "author",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "content",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "cw",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "emojis",
          "type": "list[ICustomEmojiLite]",
          "is_property": true
        },
        {
          "name": "file_ids",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "files",
          "type": "list[IDriveFile]",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_hidden",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "local_only",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "my_reaction",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "poll",
          "type": "Poll | None",
          "is_property": true
        },
        {
          "name": "reactions",
          "type": "dict[str, int]",
          "is_property": true
        },
        {
          "name": "renote",
          "type": "'Note' | None",
          "is_property": true
        },
        {
          "name": "renote_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "renote_id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "replies_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "reply",
          "type": "'Note' | None",
          "is_property": true
        },
        {
          "name": "reply_id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "uri",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "visibility",
          "type": "Literal['public', 'home', 'followers', 'specified']",
          "is_property": true
        },
        {
          "name": "visible_user_ids",
          "type": "list[str]",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NoteDeleted",
      "attributes": [
        {
          "name": "deleted_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "note_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NoteReaction",
      "attributes": [
        {
          "name": "created_at",
          "type": "datetime | None",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "user",
          "type": "LiteUser",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NoteState",
      "attributes": [
        {
          "name": "is_favorite",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_muted_thread",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_watching",
          "type": "bool",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NoteTranslateResult",
      "attributes": [
        {
          "name": "source_language",
          "type": "str",
          "is_property": true
        },
        {
          "name": "text",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "File",
      "attributes": [
        {
          "name": "blurhash",
          "type": "str",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "inspect._empty",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_sensitive",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "md5",
          "type": "str",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "properties",
          "type": "FileProperties",
          "is_property": true
        },
        {
          "name": "size",
          "type": "int",
          "is_property": true
        },
        {
          "name": "thumbnail_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        },
        {
          "name": "url",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FileProperties",
      "attributes": [
        {
          "name": "avg_color",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "height",
          "type": "int",
          "is_property": true
        },
        {
          "name": "width",
          "type": "int | None",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Folder",
      "attributes": [
        {
          "name": "created_at",
          "type": "str",
          "is_property": true
        },
        {
          "name": "files_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "folders_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "parent",
          "type": "dict[str, Any]",
          "is_property": true
        },
        {
          "name": "parent_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "FederationInstance",
      "attributes": [
        {
          "name": "caught_at",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "description",
          "type": "str",
          "is_property": true
        },
        {
          "name": "favicon_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "first_retrieved_at",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "followers_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "following_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "host",
          "type": "str",
          "is_property": true
        },
        {
          "name": "icon_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "info_updated_at",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_blocked",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_not_responding",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "is_suspended",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "last_communicated_at",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "latest_request_sent_at",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "maintainer_email",
          "type": "str",
          "is_property": true
        },
        {
          "name": "maintainer_name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "notes_count",
          "type": "int",
          "is_property": true
        },
        {
          "name": "open_registrations",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "software_name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "software_version",
          "type": "str",
          "is_property": true
        },
        {
          "name": "theme_color",
          "type": "str",
          "is_property": true
        },
        {
          "name": "users_count",
          "type": "int",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "ActiveUsersChart",
      "attributes": [
        {
          "name": "read",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "read_write",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "registered_outside_month",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "registered_outside_week",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "registered_outside_year",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "registered_within_month",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "registered_within_week",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "registered_within_year",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "write",
          "type": "list[int]",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "DriveChart",
      "attributes": [
        {
          "name": "local",
          "type": "mipac.models.chart.DriveLocalChart",
          "is_property": true
        },
        {
          "name": "remote",
          "type": "mipac.models.chart.DriveRemoteChart",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "DriveLocalChart",
      "attributes": [
        {
          "name": "dec_count",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "dec_size",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "inc_count",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "inc_size",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "total_count",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "total_size",
          "type": "list[int]",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "DriveRemoteChart",
      "attributes": [
        {
          "name": "dec_count",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "dec_size",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "inc_count",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "inc_size",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "total_count",
          "type": "list[int]",
          "is_property": true
        },
        {
          "name": "total_size",
          "type": "list[int]",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Notification",
      "attributes": [
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NotificationAchievement",
      "attributes": [
        {
          "name": "achievement",
          "type": "str",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NotificationFollow",
      "attributes": [
        {
          "name": "api",
          "type": "FollowManager",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        },
        {
          "name": "user",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NotificationFollowRequest",
      "attributes": [
        {
          "name": "api",
          "type": "FollowRequestManager",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        },
        {
          "name": "user",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NotificationNote",
      "attributes": [
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "note",
          "type": "Note",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        },
        {
          "name": "user",
          "type": "LiteUser",
          "is_property": true
        },
        {
          "name": "user_id",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NotificationPollEnd",
      "attributes": [
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "note",
          "type": "Note",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "NotificationReaction",
      "attributes": [
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "note",
          "type": "Note",
          "is_property": true
        },
        {
          "name": "reaction",
          "type": "str",
          "is_property": true
        },
        {
          "name": "type",
          "type": "str",
          "is_property": true
        },
        {
          "name": "user",
          "type": "LiteUser",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Announcement",
      "attributes": [
        {
          "name": "action",
          "type": "AdminAnnouncementClientActions",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "is_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "text",
          "type": "str",
          "is_property": true
        },
        {
          "name": "title",
          "type": "str",
          "is_property": true
        },
        {
          "name": "updated_at",
          "type": "datetime | None",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AnnouncementCommon",
      "attributes": [
        {
          "name": "action",
          "type": "AdminAnnouncementClientActions",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "text",
          "type": "str",
          "is_property": true
        },
        {
          "name": "title",
          "type": "str",
          "is_property": true
        },
        {
          "name": "updated_at",
          "type": "datetime | None",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AnnouncementSystem",
      "attributes": [
        {
          "name": "action",
          "type": "AdminAnnouncementClientActions",
          "is_property": true
        },
        {
          "name": "created_at",
          "type": "datetime",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "reads",
          "type": "int",
          "is_property": true
        },
        {
          "name": "text",
          "type": "str",
          "is_property": true
        },
        {
          "name": "title",
          "type": "str",
          "is_property": true
        },
        {
          "name": "updated_at",
          "type": "datetime | None",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "CustomEmoji",
      "attributes": [
        {
          "name": "aliases",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "category",
          "type": "str",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "url",
          "type": "str | None",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "AdminMeta",
      "attributes": [
        {
          "name": "ads",
          "type": "list[IAds] | None",
          "is_property": true
        },
        {
          "name": "banner_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "blocked_hosts",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "cache_remote_files",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "discord_client_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "discord_client_secret",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "drive_capacity_per_local_user_mb",
          "type": "int | None",
          "is_property": true
        },
        {
          "name": "drive_capacity_per_remote_user_mb",
          "type": "int | None",
          "is_property": true
        },
        {
          "name": "email",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "email_required_for_signup",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "emojis",
          "type": "list[CustomEmoji]",
          "is_property": true
        },
        {
          "name": "enable_active_email_validation",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_discord_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_email",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_github_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_hcaptch",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_ip_logging",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_recaptcha",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_sensitive_media_detection_for_videos",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_service_worker",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_twitter_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "error_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "github_client_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "github_client_secret",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "hcaptcha_secret_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "hcaptcha_site_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "hidden_tags",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "icon_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "mascot_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "max_note_text_length",
          "type": "int",
          "is_property": true
        },
        {
          "name": "object_storage_access_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_base_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_bucket",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_endpoint",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_port",
          "type": "int | None",
          "is_property": true
        },
        {
          "name": "object_storage_prefix",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_region",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_s3_force_path_style",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "object_storage_secret_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_set_public_read",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "object_storage_use_proxy",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "object_storage_use_ssl",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "pinned_users",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "proxy_account_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "proxy_account_name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "recaptcha_secret_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "recaptcha_site_key",
          "type": "str",
          "is_property": true
        },
        {
          "name": "sensitive_media_detection",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "sensitive_media_detection_sensitivity",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "set_sensitive_flag_automatically",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "smtp_host",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "smtp_pass",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "smtp_port",
          "type": "int | None",
          "is_property": true
        },
        {
          "name": "smtp_secure",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "smtp_user",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "summary_proxy",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "sw_private_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "sw_publickey",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "translator_available",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "twitter_consumer_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "twitter_consumer_secret",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "use_object_storage",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "use_star_for_reaction_fallback",
          "type": "bool",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Features",
      "attributes": [
        {
          "name": "discord",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "elasticsearch",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "email_required_for_signup",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "github",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "global_time_line",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "hcaptcha",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "local_time_line",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "miauth",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "object_storage",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "recaptcha",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "registration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "service_worker",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "twitter",
          "type": "bool",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Meta",
      "attributes": [
        {
          "name": "ads",
          "type": "list[IAds] | None",
          "is_property": true
        },
        {
          "name": "announcements",
          "type": "list[IMetaAnnouncement] | None",
          "is_property": true
        },
        {
          "name": "background_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "banner_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "cache_remote_files",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "cpu",
          "type": "CPU | None",
          "is_property": true
        },
        {
          "name": "default_dark_theme",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "default_light_theme",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "description",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "disable_global_timeline",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "disable_local_timeline",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "disable_registration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "email_required_for_signup",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "emojis",
          "type": "list[CustomEmoji]",
          "is_property": true
        },
        {
          "name": "enable_discord_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_email",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_emoji_reaction",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_github_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_hcaptch",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_recaptcha",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_service_worker",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_twitter_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "error_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "features",
          "type": "Features",
          "is_property": true
        },
        {
          "name": "feedback_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "hcaptcha_site_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "icon_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "logo_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "machine",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "maintainer_email",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "maintainer_name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "mascot_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "max_note_text_length",
          "type": "int",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "node",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_s3_force_path_style",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "os",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "pinned_clip_id",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "pinned_pages",
          "type": "list[str]",
          "is_property": true
        },
        {
          "name": "policies",
          "type": "Policies | None",
          "is_property": true
        },
        {
          "name": "proxy_account",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "proxy_account_name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "proxy_remote_files",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "psql",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "recaptcha_site_key",
          "type": "str",
          "is_property": true
        },
        {
          "name": "redis",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "repository_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "require_setup",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "secure",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "summaly_proxy",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "sw_publickey",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "theme_color",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "tos_text_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "tos_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "translator_available",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "turnstile_secret_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "uri",
          "type": "str",
          "is_property": true
        },
        {
          "name": "use_star_for_reaction_fallback",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "version",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "Policies",
      "attributes": [
        {
          "name": "antenna_limit",
          "type": "int",
          "is_property": true
        },
        {
          "name": "can_hide_ads",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "can_invite",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "can_manage_custom_emojis",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "can_public_note",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "clip_limit",
          "type": "int",
          "is_property": true
        },
        {
          "name": "drive_capacity_mb",
          "type": "int",
          "is_property": true
        },
        {
          "name": "gtl_available",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "ltl_available",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "note_each_clips_limit",
          "type": "int",
          "is_property": true
        },
        {
          "name": "pin_limit",
          "type": "int",
          "is_property": true
        },
        {
          "name": "rate_limit_factor",
          "type": "int",
          "is_property": true
        },
        {
          "name": "user_each_user_lists_limit",
          "type": "int",
          "is_property": true
        },
        {
          "name": "user_list_limit",
          "type": "int",
          "is_property": true
        },
        {
          "name": "webhook_limit",
          "type": "int",
          "is_property": true
        },
        {
          "name": "word_mute_limit",
          "type": "int",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "LiteUser",
      "attributes": [
        {
          "name": "api",
          "type": "UserManager",
          "is_property": true
        },
        {
          "name": "avatar_blurhash",
          "type": "str",
          "is_property": true
        },
        {
          "name": "avatar_color",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "avatar_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "emojis",
          "type": "list[ICustomEmojiLite]",
          "is_property": true
        },
        {
          "name": "host",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "id",
          "type": "str",
          "is_property": true
        },
        {
          "name": "instance",
          "type": "LiteInstance | None",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "nickname",
          "type": "str",
          "is_property": true
        },
        {
          "name": "online_status",
          "type": "Literal['online', 'active', 'offline', 'unknown']",
          "is_property": true
        },
        {
          "name": "username",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "LiteInstance",
      "attributes": [
        {
          "name": "name",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": [
        {
          "name": "favicon_url",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "icon_url",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "software_name",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "software_version",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "theme_color",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "str"
        }
      ]
    },
    {
      "name": "PartialCustomEmoji",
      "attributes": [
        {
          "name": "name",
          "type": "str",
          "is_property": true
        },
        {
          "name": "url",
          "type": "str | None",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "CPU",
      "attributes": [
        {
          "name": "cores",
          "type": "int",
          "is_property": true
        },
        {
          "name": "model",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "LiteMeta",
      "attributes": [
        {
          "name": "ads",
          "type": "list[IAds] | None",
          "is_property": true
        },
        {
          "name": "announcements",
          "type": "list[IMetaAnnouncement] | None",
          "is_property": true
        },
        {
          "name": "background_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "banner_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "cache_remote_files",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "cpu",
          "type": "CPU | None",
          "is_property": true
        },
        {
          "name": "default_dark_theme",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "default_light_theme",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "description",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "disable_global_timeline",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "disable_local_timeline",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "disable_registration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "email_required_for_signup",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "emojis",
          "type": "list[CustomEmoji]",
          "is_property": true
        },
        {
          "name": "enable_discord_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_email",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_emoji_reaction",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_github_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_hcaptch",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_recaptcha",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_service_worker",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_twitter_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "error_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "feedback_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "hcaptcha_site_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "icon_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "logo_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "machine",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "maintainer_email",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "maintainer_name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "mascot_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "max_note_text_length",
          "type": "int",
          "is_property": true
        },
        {
          "name": "name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "node",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "object_storage_s3_force_path_style",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "os",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "proxy_account",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "proxy_account_name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "proxy_remote_files",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "psql",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "recaptcha_site_key",
          "type": "str",
          "is_property": true
        },
        {
          "name": "redis",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "repository_url",
          "type": "str",
          "is_property": true
        },
        {
          "name": "secure",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "summaly_proxy",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "sw_publickey",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "theme_color",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "tos_text_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "tos_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "translator_available",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "turnstile_secret_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "uri",
          "type": "str",
          "is_property": true
        },
        {
          "name": "use_star_for_reaction_fallback",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "version",
          "type": "str",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "MetaCommon",
      "attributes": [
        {
          "name": "ads",
          "type": "list[IAds] | None",
          "is_property": true
        },
        {
          "name": "banner_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "cache_remote_files",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "email_required_for_signup",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "emojis",
          "type": "list[CustomEmoji]",
          "is_property": true
        },
        {
          "name": "enable_discord_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_email",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_github_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_hcaptch",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_recaptcha",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_service_worker",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "enable_twitter_integration",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "error_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "hcaptcha_site_key",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "icon_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "mascot_image_url",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "max_note_text_length",
          "type": "int",
          "is_property": true
        },
        {
          "name": "object_storage_s3_force_path_style",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "proxy_account_name",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "recaptcha_site_key",
          "type": "str",
          "is_property": true
        },
        {
          "name": "sw_publickey",
          "type": "str | None",
          "is_property": true
        },
        {
          "name": "translator_available",
          "type": "bool",
          "is_property": true
        },
        {
          "name": "use_star_for_reaction_fallback",
          "type": "bool",
          "is_property": true
        }
      ],
      "methods": []
    },
    {
      "name": "PollActions",
      "attributes": [],
      "methods": [
        {
          "name": "recommendation",
          "is_async": false,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "offset",
              "type": "int"
            },
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "vote",
          "is_async": true,
          "args": [
            {
              "name": "choice",
              "type": "int"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "MuteActions",
      "attributes": [],
      "methods": [
        {
          "name": "add",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "gets",
          "is_async": false,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "AsyncGenerator[MuteUser, None]"
        }
      ]
    },
    {
      "name": "ReactionActions",
      "attributes": [],
      "methods": [
        {
          "name": "add",
          "is_async": true,
          "args": [
            {
              "name": "reaction",
              "type": "str"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "get_emoji_list",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "list[CustomEmoji]"
        },
        {
          "name": "get_reaction",
          "is_async": true,
          "args": [
            {
              "name": "reaction",
              "type": "str"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "limit",
              "type": "int"
            }
          ],
          "return_type": "list[NoteReaction]"
        },
        {
          "name": "remove",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "BaseChatAction",
      "attributes": [],
      "methods": [
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "message_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "read",
          "is_async": true,
          "args": [
            {
              "name": "message_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "ChatAction",
      "attributes": [],
      "methods": [
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "message_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "get_history",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "group",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "read",
          "is_async": true,
          "args": [
            {
              "name": "message_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "send",
          "is_async": true,
          "args": [
            {
              "name": "text",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "file_id",
              "type": "str | None"
            },
            {
              "name": "user_id",
              "type": "str | None"
            },
            {
              "name": "group_id",
              "type": "str | None"
            }
          ],
          "return_type": "ChatMessage"
        }
      ]
    },
    {
      "name": "FollowActions",
      "attributes": [],
      "methods": [
        {
          "name": "add",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "LiteUser"
        },
        {
          "name": "invalidate",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "LiteUser"
        },
        {
          "name": "remove",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "LiteUser"
        }
      ]
    },
    {
      "name": "FollowRequestActions",
      "attributes": [],
      "methods": [
        {
          "name": "accept",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "cancel",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "LiteUser"
        },
        {
          "name": "get_all",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "list[FollowRequest]"
        },
        {
          "name": "reject",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "FavoriteActions",
      "attributes": [],
      "methods": [
        {
          "name": "add",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "remove",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "UserActions",
      "attributes": [],
      "methods": [
        {
          "name": "fetch",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            },
            {
              "name": "username",
              "type": "str | None"
            },
            {
              "name": "host",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "UserDetailed"
        },
        {
          "name": "wrapper",
          "is_async": true,
          "args": [
            {
              "name": "args",
              "type": "Any"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "get_achievements",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[Achievement]"
        },
        {
          "name": "get_me",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "UserDetailed"
        },
        {
          "name": "get_mention",
          "is_async": false,
          "args": [
            {
              "name": "user",
              "type": "Optional[LiteUser]"
            }
          ],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "get_notes",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            },
            {
              "name": "include_replies",
              "type": "bool"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "since_date",
              "type": "int"
            },
            {
              "name": "until_date",
              "type": "int"
            },
            {
              "name": "include_my_renotes",
              "type": "bool"
            },
            {
              "name": "with_files",
              "type": "bool"
            },
            {
              "name": "file_type",
              "type": "Optional[list[str]]"
            },
            {
              "name": "exclude_nsfw",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "list[Note]"
        },
        {
          "name": "get_profile_link",
          "is_async": false,
          "args": [
            {
              "name": "external",
              "type": "bool"
            },
            {
              "name": "protocol",
              "type": "Literal['http', 'https']"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "search",
          "is_async": false,
          "args": [
            {
              "name": "query",
              "type": "str"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "offset",
              "type": "int"
            },
            {
              "name": "origin",
              "type": "Literal['local', 'remote', 'combined']"
            },
            {
              "name": "detail",
              "type": "bool"
            }
          ],
          "kwargs": [
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "return_type": "AsyncGenerator[UserDetailed | LiteUser, None]"
        },
        {
          "name": "search_by_username_and_host",
          "is_async": true,
          "args": [
            {
              "name": "username",
              "type": "str"
            },
            {
              "name": "host",
              "type": "str"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "detail",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "list[UserDetailed | LiteUser]"
        }
      ]
    },
    {
      "name": "ClientNoteActions",
      "attributes": [],
      "methods": [
        {
          "name": "add_clips",
          "is_async": true,
          "args": [
            {
              "name": "clip_id",
              "type": "str"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "create_quote",
          "is_async": true,
          "args": [
            {
              "name": "content",
              "type": "str | None"
            },
            {
              "name": "visibility",
              "type": "str"
            },
            {
              "name": "visible_user_ids",
              "type": "list[str] | None"
            },
            {
              "name": "cw",
              "type": "str | None"
            },
            {
              "name": "local_only",
              "type": "bool"
            },
            {
              "name": "extract_mentions",
              "type": "bool"
            },
            {
              "name": "extract_hashtags",
              "type": "bool"
            },
            {
              "name": "extract_emojis",
              "type": "bool"
            },
            {
              "name": "files",
              "type": "list[MiFile | File | str] | None"
            },
            {
              "name": "poll",
              "type": "MiPoll | None"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Note"
        },
        {
          "name": "create_renote",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Note"
        },
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "get_children",
          "is_async": false,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "untilId",
              "type": "str | None"
            },
            {
              "name": "note_id",
              "type": "str | None"
            },
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "AsyncGenerator[Note, None]"
        },
        {
          "name": "get_reaction",
          "is_async": true,
          "args": [
            {
              "name": "reaction",
              "type": "str"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[NoteReaction]"
        },
        {
          "name": "get_state",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "NoteState"
        },
        {
          "name": "reply",
          "is_async": true,
          "args": [
            {
              "name": "content",
              "type": "str | None"
            },
            {
              "name": "visibility",
              "type": "str"
            },
            {
              "name": "visible_user_ids",
              "type": "list[str] | None"
            },
            {
              "name": "cw",
              "type": "str | None"
            },
            {
              "name": "local_only",
              "type": "bool"
            },
            {
              "name": "extract_mentions",
              "type": "bool"
            },
            {
              "name": "extract_hashtags",
              "type": "bool"
            },
            {
              "name": "extract_emojis",
              "type": "bool"
            },
            {
              "name": "files",
              "type": "list[MiFile | File | str] | None"
            },
            {
              "name": "poll",
              "type": "MiPoll | None"
            },
            {
              "name": "reply_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Note"
        },
        {
          "name": "wrapper",
          "is_async": true,
          "args": [
            {
              "name": "args",
              "type": "Any"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "un_renote",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "NoteActions",
      "attributes": [],
      "methods": [
        {
          "name": "add_clips",
          "is_async": true,
          "args": [
            {
              "name": "clip_id",
              "type": "str"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "create_quote",
          "is_async": true,
          "args": [
            {
              "name": "content",
              "type": "str | None"
            },
            {
              "name": "visibility",
              "type": "str"
            },
            {
              "name": "visible_user_ids",
              "type": "list[str] | None"
            },
            {
              "name": "cw",
              "type": "str | None"
            },
            {
              "name": "local_only",
              "type": "bool"
            },
            {
              "name": "extract_mentions",
              "type": "bool"
            },
            {
              "name": "extract_hashtags",
              "type": "bool"
            },
            {
              "name": "extract_emojis",
              "type": "bool"
            },
            {
              "name": "files",
              "type": "list[MiFile | File | str] | None"
            },
            {
              "name": "poll",
              "type": "MiPoll | None"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Note"
        },
        {
          "name": "create_renote",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Note"
        },
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "wrapper",
          "is_async": true,
          "args": [
            {
              "name": "args",
              "type": "Any"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "wrapper",
          "is_async": true,
          "args": [
            {
              "name": "args",
              "type": "Any"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "get_children",
          "is_async": false,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "untilId",
              "type": "str | None"
            },
            {
              "name": "note_id",
              "type": "str | None"
            },
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "AsyncGenerator[Note, None]"
        },
        {
          "name": "get_reaction",
          "is_async": true,
          "args": [
            {
              "name": "reaction",
              "type": "str"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[NoteReaction]"
        },
        {
          "name": "get_replies",
          "is_async": true,
          "args": [
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[Note]"
        },
        {
          "name": "get_state",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "NoteState"
        },
        {
          "name": "gets",
          "is_async": false,
          "args": [
            {
              "name": "local",
              "type": "bool"
            },
            {
              "name": "reply",
              "type": "bool"
            },
            {
              "name": "renote",
              "type": "bool"
            },
            {
              "name": "with_files",
              "type": "bool"
            },
            {
              "name": "poll",
              "type": "bool"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "return_type": "AsyncGenerator[Note, None]"
        },
        {
          "name": "reply",
          "is_async": true,
          "args": [
            {
              "name": "content",
              "type": "str | None"
            },
            {
              "name": "visibility",
              "type": "str"
            },
            {
              "name": "visible_user_ids",
              "type": "list[str] | None"
            },
            {
              "name": "cw",
              "type": "str | None"
            },
            {
              "name": "local_only",
              "type": "bool"
            },
            {
              "name": "extract_mentions",
              "type": "bool"
            },
            {
              "name": "extract_hashtags",
              "type": "bool"
            },
            {
              "name": "extract_emojis",
              "type": "bool"
            },
            {
              "name": "files",
              "type": "list[MiFile | File | str] | None"
            },
            {
              "name": "poll",
              "type": "MiPoll | None"
            },
            {
              "name": "reply_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Note"
        },
        {
          "name": "send",
          "is_async": true,
          "args": [
            {
              "name": "content",
              "type": "str | None"
            },
            {
              "name": "visibility",
              "type": "str"
            },
            {
              "name": "visible_user_ids",
              "type": "list[str] | None"
            },
            {
              "name": "cw",
              "type": "str | None"
            },
            {
              "name": "local_only",
              "type": "bool"
            },
            {
              "name": "extract_mentions",
              "type": "bool"
            },
            {
              "name": "extract_hashtags",
              "type": "bool"
            },
            {
              "name": "extract_emojis",
              "type": "bool"
            },
            {
              "name": "reply_id",
              "type": "str | None"
            },
            {
              "name": "renote_id",
              "type": "str | None"
            },
            {
              "name": "channel_id",
              "type": "str | None"
            },
            {
              "name": "files",
              "type": "list[MiFile | File | str] | None"
            },
            {
              "name": "poll",
              "type": "MiPoll | None"
            }
          ],
          "kwargs": [],
          "return_type": "Note"
        },
        {
          "name": "wrapper",
          "is_async": true,
          "args": [
            {
              "name": "args",
              "type": "Any"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "un_renote",
          "is_async": true,
          "args": [
            {
              "name": "note_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "DriveActions",
      "attributes": [],
      "methods": [
        {
          "name": "get_folders",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "folder_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[Folder]"
        }
      ]
    },
    {
      "name": "FileActions",
      "attributes": [],
      "methods": [
        {
          "name": "get_files",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "folder_id",
              "type": "str | None"
            },
            {
              "name": "file_type",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[File]"
        },
        {
          "name": "remove_file",
          "is_async": true,
          "args": [
            {
              "name": "file_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "show_file",
          "is_async": true,
          "args": [
            {
              "name": "file_id",
              "type": "str | None"
            },
            {
              "name": "url",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "File"
        },
        {
          "name": "upload_file",
          "is_async": true,
          "args": [
            {
              "name": "file",
              "type": "str"
            },
            {
              "name": "file_name",
              "type": "str | None"
            },
            {
              "name": "folder_id",
              "type": "str | None"
            },
            {
              "name": "comment",
              "type": "str | None"
            },
            {
              "name": "is_sensitive",
              "type": "bool"
            },
            {
              "name": "force",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "File"
        }
      ]
    },
    {
      "name": "FolderActions",
      "attributes": [],
      "methods": [
        {
          "name": "create",
          "is_async": true,
          "args": [
            {
              "name": "name",
              "type": "str"
            },
            {
              "name": "parent_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "folder_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "get_files",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "folder_id",
              "type": "str | None"
            },
            {
              "name": "file_type",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[File]"
        }
      ]
    },
    {
      "name": "ClientActions",
      "attributes": [],
      "methods": [
        {
          "name": "get_announcements",
          "is_async": false,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "with_unreads",
              "type": "bool"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "return_type": "AsyncGenerator[Announcement, None]"
        },
        {
          "name": "get_meta",
          "is_async": true,
          "args": [
            {
              "name": "detail",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "ChartActions",
      "attributes": [],
      "methods": [
        {
          "name": "get_active_user",
          "is_async": true,
          "args": [
            {
              "name": "span",
              "type": "str"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "offset",
              "type": "int"
            }
          ],
          "kwargs": [],
          "return_type": "ActiveUsersChart"
        },
        {
          "name": "get_drive",
          "is_async": true,
          "args": [
            {
              "name": "span",
              "type": "str"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "offset",
              "type": "int"
            }
          ],
          "kwargs": [],
          "return_type": "DriveChart"
        }
      ]
    },
    {
      "name": "FederationActions",
      "attributes": [],
      "methods": [
        {
          "name": "get_ap",
          "is_async": true,
          "args": [
            {
              "name": "uri",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "dict[Any, Any]"
        },
        {
          "name": "get_followers",
          "is_async": true,
          "args": [
            {
              "name": "host",
              "type": "str"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "limit",
              "type": "int"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "get_following",
          "is_async": true,
          "args": [
            {
              "name": "host",
              "type": "str"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "limit",
              "type": "int"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "get_instances",
          "is_async": true,
          "args": [
            {
              "name": "host",
              "type": "str | None"
            },
            {
              "name": "blocked",
              "type": "bool | None"
            },
            {
              "name": "not_responding",
              "type": "bool | None"
            },
            {
              "name": "suspended",
              "type": "bool | None"
            },
            {
              "name": "federating",
              "type": "bool | None"
            },
            {
              "name": "subscribing",
              "type": "bool | None"
            },
            {
              "name": "publishing",
              "type": "bool | None"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "offset",
              "type": "int"
            },
            {
              "name": "sort",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[FederationInstance]"
        },
        {
          "name": "get_stats",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            }
          ],
          "kwargs": [],
          "return_type": "IFederationInstanceStat"
        },
        {
          "name": "get_users",
          "is_async": true,
          "args": [
            {
              "name": "host",
              "type": "str"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "limit",
              "type": "int"
            }
          ],
          "kwargs": [],
          "return_type": "UserDetailed"
        },
        {
          "name": "show_ap",
          "is_async": true,
          "args": [
            {
              "name": "host",
              "type": "str"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            },
            {
              "name": "limit",
              "type": "int"
            }
          ],
          "kwargs": [],
          "return_type": "FederationInstance"
        },
        {
          "name": "show_instance",
          "is_async": true,
          "args": [
            {
              "name": "host",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "FederationInstance"
        },
        {
          "name": "update_remote_user",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "MyActions",
      "attributes": [],
      "methods": [
        {
          "name": "fetch_follow_requests",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AdminModeratorActions",
      "attributes": [],
      "methods": [
        {
          "name": "add",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "remove",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "AdminUserActions",
      "attributes": [],
      "methods": [
        {
          "name": "delete_account",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "show_user",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "UserDetailed"
        },
        {
          "name": "suspend",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "unsuspend",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "AdminActions",
      "attributes": [],
      "methods": [
        {
          "name": "fetch_server_info",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "ServerInfo"
        },
        {
          "name": "get_index_stats",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "list[IndexStat]"
        },
        {
          "name": "get_invite",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "get_meta",
          "is_async": true,
          "args": [
            {
              "name": "detail",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "AdminMeta"
        },
        {
          "name": "get_moderation_logs",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "ModerationLog"
        },
        {
          "name": "wrapper",
          "is_async": true,
          "args": [
            {
              "name": "args",
              "type": "Any"
            },
            {
              "name": "kwargs",
              "type": "Any"
            }
          ],
          "kwargs": [],
          "return_type": "Any"
        },
        {
          "name": "get_table_stats",
          "is_async": true,
          "args": [],
          "kwargs": [],
          "return_type": "dict[str, ITableStats]"
        },
        {
          "name": "get_user_ips",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "list[UserIP]"
        },
        {
          "name": "reset_password",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "str"
        },
        {
          "name": "resolve_abuse_user_report",
          "is_async": true,
          "args": [
            {
              "name": "report_id",
              "type": "str"
            },
            {
              "name": "forward",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "send_email",
          "is_async": true,
          "args": [
            {
              "name": "to",
              "type": "str"
            },
            {
              "name": "subject",
              "type": "str"
            },
            {
              "name": "text",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "show_user",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "UserDetailed"
        },
        {
          "name": "show_users",
          "is_async": true,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "offset",
              "type": "int"
            },
            {
              "name": "sort",
              "type": "str | None"
            },
            {
              "name": "state",
              "type": "str"
            },
            {
              "name": "origin",
              "type": "str"
            },
            {
              "name": "username",
              "type": "str | None"
            },
            {
              "name": "hostname",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "list[UserDetailed]"
        },
        {
          "name": "silence_user",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "suspend_user",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "unsilence_user",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "unsuspend_user",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "update_meta",
          "is_async": true,
          "args": [
            {
              "name": "meta",
              "type": "IUpdateMetaBody"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "update_user_note",
          "is_async": true,
          "args": [
            {
              "name": "user_id",
              "type": "str"
            },
            {
              "name": "text",
              "type": "str"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "vacuum",
          "is_async": true,
          "args": [
            {
              "name": "full",
              "type": "bool"
            },
            {
              "name": "analyze",
              "type": "bool"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "AdminAnnouncementActions",
      "attributes": [],
      "methods": [
        {
          "name": "create",
          "is_async": true,
          "args": [
            {
              "name": "title",
              "type": "str"
            },
            {
              "name": "text",
              "type": "str"
            },
            {
              "name": "image_url",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "Announcement"
        },
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "announce_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "gets",
          "is_async": false,
          "args": [
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "AsyncGenerator[AnnouncementSystem, None]"
        },
        {
          "name": "update",
          "is_async": true,
          "args": [
            {
              "name": "title",
              "type": "str"
            },
            {
              "name": "text",
              "type": "str"
            },
            {
              "name": "image_url",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "announce_id",
              "type": "str | None"
            }
          ],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AdminAnnouncementClientActions",
      "attributes": [],
      "methods": [
        {
          "name": "delete",
          "is_async": true,
          "args": [
            {
              "name": "announce_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        },
        {
          "name": "update",
          "is_async": true,
          "args": [
            {
              "name": "title",
              "type": "str"
            },
            {
              "name": "text",
              "type": "str"
            },
            {
              "name": "image_url",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "announce_id",
              "type": "str | None"
            }
          ],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AdminEmojiActions",
      "attributes": [],
      "methods": [
        {
          "name": "add",
          "is_async": true,
          "args": [
            {
              "name": "file_id",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "name",
              "type": "str | None"
            },
            {
              "name": "url",
              "type": "str | None"
            },
            {
              "name": "category",
              "type": "str | None"
            },
            {
              "name": "aliases",
              "type": "list[str] | None"
            }
          ],
          "return_type": "bool"
        },
        {
          "name": "gets",
          "is_async": false,
          "args": [
            {
              "name": "query",
              "type": "str | None"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "return_type": "AsyncGenerator[CustomEmoji, None]"
        },
        {
          "name": "gets_remote",
          "is_async": false,
          "args": [
            {
              "name": "query",
              "type": "str | None"
            },
            {
              "name": "host",
              "type": "str | None"
            },
            {
              "name": "limit",
              "type": "int"
            },
            {
              "name": "since_id",
              "type": "str | None"
            },
            {
              "name": "until_id",
              "type": "str | None"
            }
          ],
          "kwargs": [
            {
              "name": "all",
              "type": "bool"
            }
          ],
          "return_type": "AsyncGenerator[CustomEmoji, None]"
        },
        {
          "name": "remove",
          "is_async": true,
          "args": [
            {
              "name": "emoji_id",
              "type": "str | None"
            }
          ],
          "kwargs": [],
          "return_type": "bool"
        }
      ]
    },
    {
      "name": "IBasePoll",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ICreatePoll",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IPoll",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IPollChoice",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IMuteUser",
      "attributes": [],
      "methods": []
    },
    {
      "name": "NoteReactionPayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IChatGroup",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IChatMessage",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFederationFollowCommon",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFederationFollower",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFederationFollowing",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFollowRequest",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IChannel",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IAchievement",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFollowRequest",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ILiteUser",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ISignin",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IUserDetailed",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IUserDetailedField",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IUserDetailedRequired",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IUserRequired",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IIndexStat",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IModerationLog",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IServerInfo",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IServerInfoCpu",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IServerInfoFs",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IServerInfoMem",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IServerInfoNet",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ITableStats",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IUserIP",
      "attributes": [],
      "methods": []
    },
    {
      "name": "GeoPayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ICreatedNote",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INote",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteReaction",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteRequired",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteState",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteTranslateResult",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteUpdated",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteUpdatedDelete",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteUpdatedDeleteBody",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteUpdatedReaction",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteUpdatedReactionBody",
      "attributes": [],
      "methods": []
    },
    {
      "name": "FolderPayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IDriveFile",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFileProperties",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFederationInstance",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFederationInstanceRequired",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFederationInstanceStat",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IInstanceLite",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IActiveUsersChart",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IDriveChart",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IDriveLocalChart",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IDriveRemoteChart",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IAchievementNf",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INoteNf",
      "attributes": [],
      "methods": []
    },
    {
      "name": "INotification",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IPollEndNf",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IReactionNf",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IUserNf",
      "attributes": [],
      "methods": []
    },
    {
      "name": "AttachedFilePayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "EyeCatchingImagePayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IPage",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IPageRequired",
      "attributes": [],
      "methods": []
    },
    {
      "name": "PageContentPayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "PageFilePayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "PagePayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "VariablePayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IAnnouncement",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IAnnouncementCommon",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IAnnouncementSystem",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IAds",
      "attributes": [],
      "methods": []
    },
    {
      "name": "EmojiPayload",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ICustomEmoji",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ICustomEmojiLite",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ICustomEmojiLiteRequired",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IAdminMeta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ICPU",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ICommonV11",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IFeatures",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ILiteMeta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ILiteV11Meta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ILiteV12Meta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IMeta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IMetaAnnouncement",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IMetaCommon",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IMetaCommonV12",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IPolicies",
      "attributes": [],
      "methods": []
    },
    {
      "name": "ISharedAdminMeta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IUpdateMetaBody",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IV11Features",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IV12AdminMeta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IV12Features",
      "attributes": [],
      "methods": []
    },
    {
      "name": "IV12Meta",
      "attributes": [],
      "methods": []
    },
    {
      "name": "APIError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NotExistRequiredData",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": []
    },
    {
      "name": "NotSupportVersion",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": []
    },
    {
      "name": "ParameterError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": []
    },
    {
      "name": "AccessDeniedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyAddedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyBlockingError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyClippedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyExpiredError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyFavoritedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyFollowingError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyInvitedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyLikedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyMutingError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyPinnedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyPromotedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyReactedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AlreadyVotedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "AvatarNotAnImageError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "BannerNotAnImageError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "BlockedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "BlockeeIsYourselfError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "BlockingError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "CannotCreateAlreadyExpiredPollError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "CannotRenoteToAPureRenoteError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "CannotReplyToAPureRenoteError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "CannotReportTheAdminError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "CannotReportYourselfError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "ContentRequiredError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "CredentialRequiredError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "FailedToResolveRemoteUserError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "FollowRequestNotFoundError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "FolloweeIsYourselfError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "FollowerIsYourselfError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "ForbiddenError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "GroupAccessDeniedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "GtlDisabledError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "HasChildFilesOrFoldersError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "InappropriateError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "InternalErrorError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "InvalidChoiceError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "InvalidFileNameError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "InvalidParamError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "InvalidRegexpError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "InvalidUrlError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "IsOwnerError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "LtlDisabledError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "MoSuchFileError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "MuteeIsYourselfError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NameAlreadyExistsError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoFollowRequestError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoFreeSpaceError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoPollError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchAdError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchAnnouncementError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchAntennaError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchAppError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchAvatarError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchBannerError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchChannelError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchClipError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchEmojiError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchFileError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchFolderError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchGroupError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchGroupMemberError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchHashtagError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchInvitationError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchListError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchMessageError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchNoteError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchNotificationError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchObjectError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchPageError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchParentFolderError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchPostError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchRenoteTargetError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchReplyTargetError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchSessionError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchUserError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchUserGroupError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchUserListError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NoSuchWebhookError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NotBlockingError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NotFavoritedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NotFollowingError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NotLikedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NotMutingError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "NotReactedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "PendingSessionError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "PermissionDeniedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "PinLimitExceededError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "RateLimitExceededError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "ReactionsNotPublicError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "RecipientIsYourselfError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "StlDisabledError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "YouAreOwnerError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "YouHaveBeenBlockedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "YourAccountSuspendedError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "YourPageError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    },
    {
      "name": "YourPostError",
      "attributes": [
        {
          "name": "args",
          "type": "<attribute 'args' of 'BaseException' objects>",
          "is_property": false
        }
      ],
      "methods": [
        {
          "name": "raise_error",
          "is_async": false,
          "args": [],
          "kwargs": [],
          "return_type": "Any"
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "bool_to_string",
      "is_async": false,
      "args": [
        {
          "name": "boolean",
          "type": "bool"
        }
      ],
      "kwargs": [],
      "return_type": "str"
    },
    {
      "name": "cache",
      "is_async": false,
      "args": [
        {
          "name": "group",
          "type": "str"
        },
        {
          "name": "override",
          "type": "bool"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    },
    {
      "name": "check_multi_arg",
      "is_async": false,
      "args": [
        {
          "name": "args",
          "type": "Any"
        }
      ],
      "kwargs": [],
      "return_type": "bool"
    },
    {
      "name": "convert_dict_keys_to_camel",
      "is_async": false,
      "args": [
        {
          "name": "data",
          "type": "Mapping[Any, Any]"
        },
        {
          "name": "replace_list",
          "type": "dict[str, str] | None"
        }
      ],
      "kwargs": [],
      "return_type": "Mapping[Any, Any]"
    },
    {
      "name": "deprecated",
      "is_async": false,
      "args": [
        {
          "name": "func",
          "type": "Any"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    },
    {
      "name": "get_cache_key",
      "is_async": false,
      "args": [
        {
          "name": "func",
          "type": "Any"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    },
    {
      "name": "key_builder",
      "is_async": false,
      "args": [
        {
          "name": "func",
          "type": "Any"
        },
        {
          "name": "cls",
          "type": "Any"
        },
        {
          "name": "args",
          "type": "Any"
        },
        {
          "name": "kwargs",
          "type": "Any"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    },
    {
      "name": "remove_dict_empty",
      "is_async": false,
      "args": [
        {
          "name": "data",
          "type": "dict[str, Any]"
        }
      ],
      "kwargs": [],
      "return_type": "dict[str, Any]"
    },
    {
      "name": "remove_list_empty",
      "is_async": false,
      "args": [
        {
          "name": "data",
          "type": "list[Any]"
        }
      ],
      "kwargs": [],
      "return_type": "list[Any]"
    },
    {
      "name": "set_cache",
      "is_async": false,
      "args": [
        {
          "name": "group",
          "type": "str"
        },
        {
          "name": "key",
          "type": "str"
        },
        {
          "name": "value",
          "type": "Any"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    },
    {
      "name": "snake_to_camel",
      "is_async": false,
      "args": [
        {
          "name": "snake_str",
          "type": "str"
        },
        {
          "name": "replace_list",
          "type": "dict[str, str]"
        }
      ],
      "kwargs": [],
      "return_type": "str"
    },
    {
      "name": "str_lower",
      "is_async": false,
      "args": [
        {
          "name": "text",
          "type": "str"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    },
    {
      "name": "str_to_datetime",
      "is_async": false,
      "args": [
        {
          "name": "data",
          "type": "str"
        },
        {
          "name": "format",
          "type": "str"
        }
      ],
      "kwargs": [],
      "return_type": "datetime"
    },
    {
      "name": "upper_to_lower",
      "is_async": false,
      "args": [
        {
          "name": "data",
          "type": "dict[str, Any]"
        },
        {
          "name": "field",
          "type": "Optional[dict[str, Any]]"
        },
        {
          "name": "nest",
          "type": "bool"
        },
        {
          "name": "replace_list",
          "type": "Optional[dict[str, Any]]"
        }
      ],
      "kwargs": [],
      "return_type": "dict[str, Any]"
    },
    {
      "name": "json_or_text",
      "is_async": true,
      "args": [
        {
          "name": "response",
          "type": "aiohttp.ClientResponse"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    },
    {
      "name": "create_note_body",
      "is_async": false,
      "args": [
        {
          "name": "content",
          "type": "str | None"
        },
        {
          "name": "visibility",
          "type": "str"
        },
        {
          "name": "visible_user_ids",
          "type": "list[str] | None"
        },
        {
          "name": "cw",
          "type": "str | None"
        },
        {
          "name": "local_only",
          "type": "bool"
        },
        {
          "name": "extract_mentions",
          "type": "bool"
        },
        {
          "name": "extract_hashtags",
          "type": "bool"
        },
        {
          "name": "extract_emojis",
          "type": "bool"
        },
        {
          "name": "reply_id",
          "type": "str | None"
        },
        {
          "name": "renote_id",
          "type": "str | None"
        },
        {
          "name": "channel_id",
          "type": "str | None"
        },
        {
          "name": "files",
          "type": "list[MiFile | File | str] | None"
        },
        {
          "name": "poll",
          "type": "MiPoll | None"
        }
      ],
      "kwargs": [],
      "return_type": "Any"
    }
  ],
  "class_names": [
    "AuthClient",
    "MiTime",
    "HTTPClient",
    "MisskeyClientWebSocketResponse",
    "Route",
    "_MissingSentinel",
    "Client",
    "MiFile",
    "CacheConfig",
    "CacheConfigData",
    "Config",
    "AbstractManager",
    "AbstractAction",
    "AbstractModel",
    "PollManager",
    "MuteManager",
    "ReactionManager",
    "ChatManager",
    "FollowManager",
    "FollowRequestManager",
    "FavoriteManager",
    "UserManager",
    "ClientNoteManager",
    "NoteManager",
    "DriveManager",
    "FileManager",
    "FolderManager",
    "ClientManager",
    "ChartManager",
    "PagesManager",
    "FederationManager",
    "MyManager",
    "AdminAdvertisingManager",
    "AdminModeratorManager",
    "AdminUserManager",
    "AdminManager",
    "AdminAnnouncementManager",
    "AdminEmojiManager",
    "MiPoll",
    "Poll",
    "PollChoice",
    "MuteUser",
    "PartialReaction",
    "ChatGroup",
    "ChatMessage",
    "FollowRequest",
    "Channel",
    "Achievement",
    "FollowRequest",
    "UserDetailed",
    "IndexStat",
    "ModerationLog",
    "ServerInfo",
    "ServerInfoCpu",
    "ServerInfoFs",
    "ServerInfoMem",
    "ServerInfoNet",
    "UserIP",
    "Follow",
    "Header",
    "Note",
    "NoteDeleted",
    "NoteReaction",
    "NoteState",
    "NoteTranslateResult",
    "File",
    "FileProperties",
    "Folder",
    "FederationInstance",
    "ActiveUsersChart",
    "DriveChart",
    "DriveLocalChart",
    "DriveRemoteChart",
    "Notification",
    "NotificationAchievement",
    "NotificationFollow",
    "NotificationFollowRequest",
    "NotificationNote",
    "NotificationPollEnd",
    "NotificationReaction",
    "Announcement",
    "AnnouncementCommon",
    "AnnouncementSystem",
    "CustomEmoji",
    "AdminMeta",
    "Features",
    "Meta",
    "Policies",
    "LiteUser",
    "LiteInstance",
    "PartialCustomEmoji",
    "CPU",
    "LiteMeta",
    "MetaCommon",
    "PollActions",
    "MuteActions",
    "ReactionActions",
    "BaseChatAction",
    "ChatAction",
    "FollowActions",
    "FollowRequestActions",
    "FavoriteActions",
    "UserActions",
    "ClientNoteActions",
    "NoteActions",
    "DriveActions",
    "FileActions",
    "FolderActions",
    "ClientActions",
    "ChartActions",
    "FederationActions",
    "MyActions",
    "AdminModeratorActions",
    "AdminUserActions",
    "AdminActions",
    "AdminAnnouncementActions",
    "AdminAnnouncementClientActions",
    "AdminEmojiActions",
    "IBasePoll",
    "ICreatePoll",
    "IPoll",
    "IPollChoice",
    "IMuteUser",
    "NoteReactionPayload",
    "IChatGroup",
    "IChatMessage",
    "IFederationFollowCommon",
    "IFederationFollower",
    "IFederationFollowing",
    "IFollowRequest",
    "IChannel",
    "IAchievement",
    "IFollowRequest",
    "ILiteUser",
    "ISignin",
    "IUserDetailed",
    "IUserDetailedField",
    "IUserDetailedRequired",
    "IUserRequired",
    "IIndexStat",
    "IModerationLog",
    "IServerInfo",
    "IServerInfoCpu",
    "IServerInfoFs",
    "IServerInfoMem",
    "IServerInfoNet",
    "ITableStats",
    "IUserIP",
    "GeoPayload",
    "ICreatedNote",
    "INote",
    "INoteReaction",
    "INoteRequired",
    "INoteState",
    "INoteTranslateResult",
    "INoteUpdated",
    "INoteUpdatedDelete",
    "INoteUpdatedDeleteBody",
    "INoteUpdatedReaction",
    "INoteUpdatedReactionBody",
    "FolderPayload",
    "IDriveFile",
    "IFileProperties",
    "IFederationInstance",
    "IFederationInstanceRequired",
    "IFederationInstanceStat",
    "IInstanceLite",
    "IActiveUsersChart",
    "IDriveChart",
    "IDriveLocalChart",
    "IDriveRemoteChart",
    "IAchievementNf",
    "INoteNf",
    "INotification",
    "IPollEndNf",
    "IReactionNf",
    "IUserNf",
    "AttachedFilePayload",
    "EyeCatchingImagePayload",
    "IPage",
    "IPageRequired",
    "PageContentPayload",
    "PageFilePayload",
    "PagePayload",
    "VariablePayload",
    "IAnnouncement",
    "IAnnouncementCommon",
    "IAnnouncementSystem",
    "IAds",
    "EmojiPayload",
    "ICustomEmoji",
    "ICustomEmojiLite",
    "ICustomEmojiLiteRequired",
    "IAdminMeta",
    "ICPU",
    "ICommonV11",
    "IFeatures",
    "ILiteMeta",
    "ILiteV11Meta",
    "ILiteV12Meta",
    "IMeta",
    "IMetaAnnouncement",
    "IMetaCommon",
    "IMetaCommonV12",
    "IPolicies",
    "ISharedAdminMeta",
    "IUpdateMetaBody",
    "IV11Features",
    "IV12AdminMeta",
    "IV12Features",
    "IV12Meta",
    "APIError",
    "NotExistRequiredData",
    "NotSupportVersion",
    "ParameterError",
    "AccessDeniedError",
    "AlreadyAddedError",
    "AlreadyBlockingError",
    "AlreadyClippedError",
    "AlreadyExpiredError",
    "AlreadyFavoritedError",
    "AlreadyFollowingError",
    "AlreadyInvitedError",
    "AlreadyLikedError",
    "AlreadyMutingError",
    "AlreadyPinnedError",
    "AlreadyPromotedError",
    "AlreadyReactedError",
    "AlreadyVotedError",
    "AvatarNotAnImageError",
    "BannerNotAnImageError",
    "BlockedError",
    "BlockeeIsYourselfError",
    "BlockingError",
    "CannotCreateAlreadyExpiredPollError",
    "CannotRenoteToAPureRenoteError",
    "CannotReplyToAPureRenoteError",
    "CannotReportTheAdminError",
    "CannotReportYourselfError",
    "ContentRequiredError",
    "CredentialRequiredError",
    "FailedToResolveRemoteUserError",
    "FollowRequestNotFoundError",
    "FolloweeIsYourselfError",
    "FollowerIsYourselfError",
    "ForbiddenError",
    "GroupAccessDeniedError",
    "GtlDisabledError",
    "HasChildFilesOrFoldersError",
    "InappropriateError",
    "InternalErrorError",
    "InvalidChoiceError",
    "InvalidFileNameError",
    "InvalidParamError",
    "InvalidRegexpError",
    "InvalidUrlError",
    "IsOwnerError",
    "LtlDisabledError",
    "MoSuchFileError",
    "MuteeIsYourselfError",
    "NameAlreadyExistsError",
    "NoFollowRequestError",
    "NoFreeSpaceError",
    "NoPollError",
    "NoSuchAdError",
    "NoSuchAnnouncementError",
    "NoSuchAntennaError",
    "NoSuchAppError",
    "NoSuchAvatarError",
    "NoSuchBannerError",
    "NoSuchChannelError",
    "NoSuchClipError",
    "NoSuchEmojiError",
    "NoSuchFileError",
    "NoSuchFolderError",
    "NoSuchGroupError",
    "NoSuchGroupMemberError",
    "NoSuchHashtagError",
    "NoSuchInvitationError",
    "NoSuchListError",
    "NoSuchMessageError",
    "NoSuchNoteError",
    "NoSuchNotificationError",
    "NoSuchObjectError",
    "NoSuchPageError",
    "NoSuchParentFolderError",
    "NoSuchPostError",
    "NoSuchRenoteTargetError",
    "NoSuchReplyTargetError",
    "NoSuchSessionError",
    "NoSuchUserError",
    "NoSuchUserGroupError",
    "NoSuchUserListError",
    "NoSuchWebhookError",
    "NotBlockingError",
    "NotFavoritedError",
    "NotFollowingError",
    "NotLikedError",
    "NotMutingError",
    "NotReactedError",
    "PendingSessionError",
    "PermissionDeniedError",
    "PinLimitExceededError",
    "RateLimitExceededError",
    "ReactionsNotPublicError",
    "RecipientIsYourselfError",
    "StlDisabledError",
    "YouAreOwnerError",
    "YouHaveBeenBlockedError",
    "YourAccountSuspendedError",
    "YourPageError",
    "YourPostError"
  ]
}